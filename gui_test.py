import sys, time, os, platform
import time
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from threading import Thread, Event
from docx import Document
from docx.shared import RGBColor
import re
from clipboard import copy
import json
import zipfile
import traceback
import ctypes

global scripts

def log_writer(types, data, Except=None):
    tm = time.localtime(time.time())
    date = (str(tm.tm_year)[2:] + str(tm.tm_mon).zfill(2) + str(tm.tm_mday).zfill(2))
    times = f"{tm.tm_year}-{str(tm.tm_mon).zfill(2)}-{str(tm.tm_mday).zfill(2)} {str(tm.tm_hour).zfill(2)}:{str(tm.tm_min).zfill(2)}:{str(tm.tm_sec).zfill(2)}"
    if types == 'E':
        with open(f"./log/log_{date}.log",'a',encoding='utf8') as f:
            f.writelines(f"{times} = [{types}] {data}\n")
            f.writelines("---------ERROR---------\n")
            f.writelines(traceback.format_exc())
            f.writelines("-----------------------\n")
            f.writelines("Plz Report Developer\n")
        with zipfile.ZipFile(f'./log_file.zip','w') as zf:
            for folder, sfolder, files in os.walk('./log'):
                for i in files:
                    zf.write(os.path.join(folder, i), os.path.relpath(os.path.join(folder, i), './log'), compress_type = zipfile.ZIP_DEFLATED)
    else:
        with open(f"./log/log_{date}.log",'a',encoding='utf8') as f:
            f.writelines(f"{times} = [{types}] {data}\n")
        


class script_modify(QDialog):
    def __init__(self, parent=None):
        log_writer('I',"Script Editor Run")
        super().__init__(parent)
        self.dialog()
        self.work = False

    def script_init(self):
        log_writer('D',"Script Init")
        try:
            with open("./script.json", encoding="utf-8") as f:
                scripts = json.load(f)
        except Exception as e:
            log_writer('E','Load Script Error', e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

        return scripts

    def dialog(self):
        log_writer('D',"Sub Dialog Init")
        try:
            self.type_selector = QComboBox(self)
            self.type_selector.activated.connect(self.type_Check)

            self.script_q = [
                "1. 백신 설치 여부 확인",
                "2. 백신 최신 업데이트 및 실시간 감시 기능 확인",
                "3. 스마트폰 잠금 여부 확인",
                "4. 구글 Play 프로텍트 확인",
                "5. 최신 업데이트 확인",
                "6. 개발자 옵션 활성화 여부 확인",
                "7. 앱 권한 관리 확인",
                "8. 구글 2단계 인증 설정 여부 확인",
            ]

            self.scripts = self.script_init()

            self.type_selector.addItem('양호')
            self.type_selector.addItem('취약')
            self.type_selector.addItem('조치후_양호')
            self.type_selector.addItem('조치후_취약')

            self.changed = []

            self.script_select = QComboBox(self)
            self.script_select.activated.connect(self.script_read)

            self.text_editor = QTextEdit()
            self.text_editor.textChanged.connect(self.modify_text)

            self.sc_save_b = QPushButton("저장")
            self.sc_save_b.released.connect(self.save_script)
            self.sc_cancel_b = QPushButton("취소")
            self.sc_cancel_b.released.connect(self.cancel_script)
            
            self.sa_la = QLabel("저장 위치")
            self.sa_tb = QLineEdit()
            self.sa_tb.setText(self.scripts["저장경로"])
            self.sa_tb.setReadOnly(True)
            self.sa_db = QPushButton("폴더 선택")
            self.sa_db.released.connect(self.folder_select)
            

            hbox = QHBoxLayout()
            hbox.addWidget(self.sa_la)
            hbox.addWidget(self.sa_tb)
            hbox.addWidget(self.sa_db)
            

            self.advi_label = QLabel("* 를 괄호 묶듯 입력할시 추가 입력 가능 (7번 항목 참고)")

            self.temp = self.scripts

            gridl = QGridLayout()
            gridl.addWidget(self.type_selector, 1, 0, 1, 6)
            gridl.addWidget(self.script_select, 2, 0, 1, 6)
            gridl.addWidget(self.text_editor, 3, 0, 3, 6)
            gridl.addWidget(self.advi_label, 6, 0, 1, 1)
            gridl.addLayout(hbox, 7,0,1,4)
            gridl.addWidget(self.sc_save_b, 7, 4, 1, 1)
            gridl.addWidget(self.sc_cancel_b, 7, 5, 1, 1)

            self.setLayout(gridl)
            self.setFixedSize(550, 300)
            self.show()
        except Exception as e:
            log_writer('E','Script Editor Init Error', e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def folder_select(self):
        log_writer('D',"Folder Select Btn Clicked")
        try:
            fold = QFileDialog.getExistingDirectory(self, "저장할 폴더를 선택해주세요.")
            self.sa_tb.setText(fold)
            self.scripts['저장경로'] = fold
            
            with open("./script.json",'w',encoding="utf-8") as f:
                json.dump(self.scripts,f)
                log_writer('I',f"Folder Selected {fold}")
        except Exception as e:
            log_writer('E', 'Folder Selector Error', e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def type_Check(self):
        log_writer('D',"Type Select")
        try:
            self.script_select.clear()
            if self.type_selector.currentText() == '취약' or self.type_selector.currentText() == '양호':
                for i in self.script_q:
                    self.script_select.addItem(i)
            else:
                for i in ['백신 및 실시간 감시','실시간 감시']:
                    self.script_select.addItem(i)
        except Exception as e:
            log_writer('E', 'Type Checker Error', e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def script_read(self):
        log_writer('D',"Read To Scripts")
        try:
            types = self.type_selector.currentText()
            if (
                len(self.scripts[types][self.script_select.currentIndex()]) >= 2
                and type(self.scripts[types][self.script_select.currentIndex()]) == list
            ):
                self.text_editor.setText(
                    "*".join(self.scripts[types][self.script_select.currentIndex()])
                )
            else:
                self.text_editor.setText(
                    self.scripts[types][self.script_select.currentIndex()]
                )
        except Exception as e:
            log_writer('E', 'Script Reader Error', e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def modify_text(self):
        log_writer('D',"Modified Text")
        try:
            text_temp = self.text_editor.toPlainText()

            if (not [self.type_selector.currentText(),self.script_select.currentIndex(),] in self.changed) and self.scripts[self.type_selector.currentText()][self.script_select.currentIndex()] == self.temp[self.type_selector.currentText()][self.script_select.currentIndex()]:
                pass
            else:
                self.changed.append([self.type_selector.currentText(), self.script_select.currentIndex()])
            if "*" in text_temp:
                self.temp[self.type_selector.currentText()][self.script_select.currentIndex()] = text_temp.split("*")
            else:
                self.temp[self.type_selector.currentText()][self.script_select.currentIndex()] = text_temp
        except Exception as e:
            log_writer('E', 'Script Modify Error', e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)
        # return 1

    def save_script(self):
        log_writer('I',"Saving Scripts")
        try:
            if not self.changed:
                self.close()
            else:
                text = []
                for i in self.changed:
                    text.append(i[0] + " | " + self.script_q[i[1]])
                texts = "\n".join(text)
                text = f"수정된 항목\n" + texts + " \n이대로 저장하시겠습니까?"
                reply = QMessageBox.question(self, "저장 안내", text, QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)
                
                if reply == QMessageBox.Yes:
                    if not os.path.isfile("./script.json"):
                        print("파일 생성")
                        with open("./script.json", "w", encoding="utf-8") as f:
                            json.dump(self.temp, f, ensure_ascii=False, indent=4)
                    else:
                        with open("./script_bak.json", "w", encoding="utf-8") as f:
                            json.dump(self.scripts, f, ensure_ascii=False, indent=4)
                        with open("./script.json", "w", encoding="utf-8") as f:
                            json.dump(self.temp, f, ensure_ascii=False, indent=4)
                    self.work = True
                    self.close()
        except Exception as e:
            log_writer('E',"Scripts Save Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def cancel_script(self):
        log_writer('I',"Script Save Cancel")
        try:
            if not self.changed:
                self.close()
            else:
                text = []
                for i in self.changed:
                    text.append(i[0] + " | " + self.script_q[i[1]])
                texts = "\n".join(text)
                log_writer('D',"Alert Modify Script")
                text = f"수정된 항목\n" + texts + " \n이 있습니다.\n그래도 종료하시겠습니까?"
                reply = QMessageBox.question(self, "저장 안내", text, QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                if reply == QMessageBox.Yes:
                    self.close()
        except Exception as e:
            log_writer('E',"Scripts Cancel Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)


class MyApp(QWidget):
    def __init__(self):
        log_writer('I',"Script Module Load")
        try:
            super().__init__()
            self.initUI()
        except Exception as e:
            log_writer('E',"Init Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def stat_print(self):
        log_writer('D',"Print Status")
        try:
            good_c = self.ans.count("양호")
            bad_c = self.ans.count("취약")
            self.stat_now.setText(f"양호 : {good_c} | 취약 : {bad_c}")
        except Exception as e:
            log_writer('E',"Status Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def script_init(self):
        log_writer('I',"Scripts Init")
        try:
            windows_user_name = os.path.expanduser("~")
            if not os.path.isfile("./script.json"):
                reply = QMessageBox.question(
                    self,
                    "오류",
                    "스크립트 파일 을 읽지 못하거나 없습니다.\n초기 스크립트 작성을 시작합니다.",
                    QMessageBox.Yes | QMessageBox.No,
                    QMessageBox.Yes,
                )
                if reply == QMessageBox.Yes:
                    log_writer('D',"Create Basic Script")
                    script_temp = {
                        "양호": [
                            "양호 : 백신이 설치 되어있어 양호합니다.",
                            "양호 : 백신이 업데이트 되어 있고 실시간 감시가 활성화 되어있어 양호합니다.",
                            "양호 : 스마트폰 잠금 설정이 되어있어 양호합니다.",
                            "양호 : 구글 Play 프로텍트가 활성화 되어있어 양호합니다.",
                            "양호 : 최신 보안 업데이트가 되어 있어 양호합니다.",
                            "양호 : 개발자 옵션이 비활성화 되어있어 양호합니다.",
                            "양호 : 출처를 알 수 없는 앱 설치 권한이 주어진 어플이 없어 양호합니다.",
                            "양호 : 구글 2단계 인증 설정이 되어있어 양호합니다.",
                        ],
                        "취약": [
                            '취약 : 백신이 설치 되어있지 않아 취약합니다.\n\n구글 플레이 스토어에서 모바일 백신 어플리케이션(알약M, V3 Mobile Security, 등) 설치하셔서 사용하시는 것을 권고드립니다.\n\n설치 방법 : 구글 플레이 스토어에 "모바일 백신" 검색후 원하는 백신 설치',
                            "취약 : 백신이 업데이트가 되어 있지 않거나 실시간 감시 기능이 비활성화 되어있어 취약합니다.\n\n보다 안전한 사용을 위해 백신 업데이트 진행 및 실시간 감시를 활성화 하시는것을 권고드립니다.\n\n( 활성화 방법 : 백신 어플 실행 -> 권한 부여 -> 사용 정보 접근 권한 부여 -> 사용 )\n\n백신에 권한이 주어져있고 실시간 감시 기능이 활성화 되있으나 백신 어플에대한 업데이트가 되어있지 않아 취약합니다.\n\n( 업데이트 방법 : 구글 플레이 스토어 -> 백신 검색 -> 업데이트 -> 실행 )",
                            "취약 : 스마트폰 잠금 설정이 되어있지 않아 취약합니다.\n\n고객님의 휴대폰에서 화면 잠금 방식(패턴, PIN, 비밀번호, 얼굴, 지문 인식) 을 설정하셔서 사용하시는 것을 권고드립니다.\n\n( 접근방법 : 설정 -> 잠금화면 -> 화면 잠금 방식 )",
                            "취약 : 구글 Play 프로텍트가 비활성화 되어있어 취약합니다.\n\n비활성화 되어있는 경우 안전하지 않은 앱이 문제를 발생시키거나 보안 취약점이 될 수 있기 때문에 활성화 하여 사용하시는것을 권고드립니다.\n\n(접근 방법 : 설정 -> 생체 인식 및 보안 -> Google Play 프로텍트)",
                            "취약 : 최신 보안 업데이트가 되어 있지 않아 취약합니다.\n\n제조사에서 파악한 결함 및 취약점에 대한 패치이기 때문에 보안 업데이트를 진행 하시는것을 권고드립니다.\n\n(접근 방법 : 설정 -> 소프트웨어 업데이트 또는 설정 -> 생체 인식 및 보안 -> 보안 업데이트)",
                            '취약 : 개발자 옵션이 활성화 되어있어 취약합니다.\n\n개발자 옵션에 있는 몇몇 기능 등을 통해 비인가자가 시스템에 관련된 주요 옵션을 변경할수 있는 중요한 옵션이며 해당 기능을 통해 악성코드를 유포 할 수 있기 때문에 개발자 옵션을 비활성화 하는것을 권고드립니다.\n\n(접근 방법 : 설정 -> 개발자 옵션 -> 화면 상단 "사용 중" 옆 버튼 눌러 끄기)',
                            [
                                "취약 : 출처를 알 수 없는 앱 설치 권한이 주어진 어플이 있어 취약합니다.\n\n출처를 알 수 없는 앱 설치 권한을 제거 하거나 해당 어플리케이션을 삭제하는것을 권고드립니다.\n",
                                "대상 어플 : ",
                                "\n(접근 방법 : 설정 -> 애플리케이션 (앱) -> 우측 상단 메뉴버튼 -> 특별한 접근 -> 출처를 알 수 없는 앱 설치 -> 허용됨 항목 -> 들어가셔서 비활성화)",
                            ],
                            "취약 : 구글 2단계 인증 설정이 되어있지 않아 취약합니다.\n\n구글 2단계 인증을 하면 구글계정의 사용 내역 등 개인정보들이 보다 안전하게 관리될 수 있으니 설정하여 사용하시는 것을 권고 드립니다.\n\n(접근 방법 : 설정 -> Google -> Google 계정 관리 -> 보안 탭 -> 2단계 인증 -> 활성화 진행)",
                        ],
                        "조치후_양호" : [
                            "1번(백신 설치 여부 확인)과 2번항목(실시간 감시 및 최신 업데이트 여부 확인) 의 경우 점검전 설치가 되어있지 않았으나, 고객님께서 설치를 진행해주셨고, 실시간 감시 또한 활성화 되어 보다 안전하게 이용하실수 있는점 참고 부탁드립니다.",
                            "1번(백신 설치 여부 확인) 의 경우 설치가 되어있어 양호하셨으나, 2번항목(실시간 감시 및 최신 업데이트 여부 확인) 이 취약한 부분이 있으셨습니다. 다만 이부분의 경우 고객님꼐서 모두 조치 진행해주셔서 양호하신것으로 확인됩니다.",
                        ],
                        "조치후_취약" : [
                            "현재 고객님 스마트폰에는 백신설치가 되어있지 않아 설치여부를 여쭈어 보았으나 해당부분 고객님꼐서 원치 않으신점을 고려하여 해당부분 설치 하지 않으셨습니다.\n고객님께서 좀더 안전하게 사용하시기 위해서 구글 플레이 스토어 에서 '모바일 백신' 검색후 설치 진행하신뒤 권한 까지 부여 하셔서 사용하시는것을 권고드랍니다.",
                            "현재 고객님께서 사용중이신 스마트폰에 백신 어플이 설치되어 있으나, 고객님께서 실시간 감시 활성화 및 업데이트 조치를 원하시지 않아, 해당부분 조치하지 않고 넘어가는점 양해 부탁드립니다.\n또한 보다 안전하게 사용하시려면 고객님께서 사용중이신 백신어플의 업데이트 유무를 확인하고 업데이트를 진행한뒤, 실시간 감시 기능까지 활성화 하여 사용해주시면 보다 안전하게 이용하실수 있는점 참고 부탁 드리겠습니다."
                        ],

                        "저장경로": windows_user_name + "/Desktop",
                        "NFSF" : "N",
                        "CLIP" : "Y",
                        "MANU" : "Y",
                    }
                    
                    try:
                        log_writer('D',"Script Save")
                        with open("./script.json", "w", encoding="utf-8") as f:
                            json.dump(script_temp, f,ensure_ascii=False, indent=4)
                    except:
                        pass
                            # json.dump(f, script_temp, ensure_ascii=False)
                    # self.script_change()
                    self.scripts = script_temp
                    # self.script_init()
            else:
                with open("./script.json", encoding="utf-8") as f:
                    self.scripts = json.load(f)
            self.good_text = self.scripts["양호"]
            self.bad_text = self.scripts["취약"]
            try:
                self.afterg_text = self.scripts["조치후_양호"]
                self.afterb_test = self.scripts["조치후_취약"]
            except KeyError:
                log_writer("W", "Update Json Data Reflesh")
                with open("./script.json", encoding="utf-8") as f:
                    data = json.load(f)
                data["조치후_양호"] = [
                            "1번(백신 설치 여부 확인)과 2번항목(실시간 감시 및 최신 업데이트 여부 확인) 의 경우 점검전 설치가 되어있지 않았으나, 고객님께서 설치를 진행해주셨고, 실시간 감시 또한 활성화 되어 보다 안전하게 이용하실수 있는점 참고 부탁드립니다.",
                            "1번(백신 설치 여부 확인) 의 경우 설치가 되어있어 양호하셨으나, 2번항목(실시간 감시 및 최신 업데이트 여부 확인) 이 취약한 부분이 있으셨습니다.\n다만 이부분의 경우 고객님꼐서 모두 조치 진행해주셔서 양호하신것으로 확인됩니다.",
                        ]
                data["조치후_취약"] = [
                            "현재 고객님 스마트폰에는 백신설치가 되어있지 않아 설치여부를 여쭈어 보았으나 해당부분 고객님꼐서 원치 않으신점을 고려하여 해당부분 설치 하지 않으셨습니다.\n고객님께서 좀더 안전하게 사용하시기 위해서 구글 플레이 스토어 에서 '모바일 백신' 검색후 설치 진행하신뒤 권한 까지 부여 하셔서 사용하시는것을 권고드랍니다.",
                            "현재 고객님께서 사용중이신 스마트폰에 백신 어플이 설치되어 있으나, 고객님께서 실시간 감시 활성화 및 업데이트 조치를 원하시지 않아, 해당부분 조치하지 않고 넘어가는점 양해 부탁드립니다.\n또한 보다 안전하게 사용하시려면 고객님께서 사용중이신 백신어플의 업데이트 유무를 확인하고 업데이트를 진행한뒤, 실시간 감시 기능까지 활성화 하여 사용해주시면 보다 안전하게 이용하실수 있는점 참고 부탁 드리겠습니다.",
                        ]
                with open("./script.json", 'w', encoding="utf-8") as f:
                    json.dump(data, f, ensure_ascii=False, indent=4)
                
                self.scripts = data

                self.afterg_text = self.scripts["조치후_양호"]
                self.afterb_test = self.scripts["조치후_취약"]
            try:
                self.save_locate = self.scripts["저장경로"]
            except KeyError:
                log_writer('I',"Modify Script File")
                self.scripts['저장경로'] = windows_user_name + '/Desktop'
                with open("./script.json", 'w', encoding="utf-8") as f:
                    json.dump(self.scripts,f)
        except Exception as e:
            log_writer('E',"Scripts Init Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def script_change(self):
        log_writer('D',"Script Change Run")
        scr = script_modify(self)
        scr.exec_()
        if scr.work:
            self.script_init()
        else:
            pass

    def initUI(self):
        log_writer('I',"Mobile Report Program Init")
        try:
            self.script_init()
            self.setWindowTitle("보고서 생성기")
            self.grid = QGridLayout()
            self.setLayout(self.grid)

            seq_label = QLabel("예약번호 : ")

            self.seq_data = QLineEdit()
            self.seq_data.returnPressed.connect(self.return_Press)

            self.seq_confirm = QPushButton("확인")
            self.seq_confirm.released.connect(self.return_Press)

            self.seq_num = ""

            self.save = QPushButton("보고서 저장")
            self.save.released.connect(self.save_b)

            self.reset = QPushButton("내용 지우기")
            self.reset.released.connect(self.reset_press)

            data_label = QLabel("데이터 입력")

            self.any_data = QTextEdit()

            self.any_confirm = QPushButton("확인")
            self.any_confirm.released.connect(self.enable_any_data)

            self.stat_now = QLabel("양호 : 0 | 취약 : 0")

            self.clip_ck_box = QCheckBox("안내글")
            self.clip_ck_box.stateChanged.connect(self.CLIP_stat)
            try:
                if self.scripts['CLIP'] == 'Y':
                    self.clip_ck_box.toggle()
            except KeyError:
                log_writer('I',"Script Modify")
                self.scripts["CLIP"] = "N"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['CLIP'] = "N"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)

            self.file_ck = QCheckBox("파일만저장")
            self.file_ck.stateChanged.connect(self.NFSF_stat)
            try:
                if self.scripts['NFSF'] == 'Y':
                    self.file_ck.toggle()
            except KeyError:
                log_writer('I',"Script Modify")
                self.scripts["NFSF"] = "N"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['NFSF'] = "N"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)

            self.change_script = QPushButton("문구 및 설정변경")
            self.change_script.released.connect(self.script_change)

            self.cp_ms_ck = QCheckBox('링크복사')
            self.cp_ms_ck.stateChanged.connect(self.MENU_stat)
            try:
                if self.scripts['MENU'] == 'Y':
                    self.cp_ms_ck.toggle()
            except KeyError:
                log_writer('I',"Script Modify")
                self.scripts["MENU"] = "Y"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['MENU'] = "Y"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)

            vaccine_text = QLabel("사용중인 백신(수동 입력시 ,으로 구분): ")

            vac_list = ['미설치','V3 Mobile Security', '알약M', '네이버 백신', '모바일가드', '기타...']
            self.stat_list = [' ','양호','취약']
            self.vaccine_list = QComboBox()
            for i in vac_list:
                self.vaccine_list.addItem(i)
            self.vaccine_list.currentIndexChanged.connect(self.list_to_text)
            self.vaccine_list.setEnabled(False)

            self.vaccine_used = QLineEdit("")

            self.install_vaccine = QPushButton("백신 리스트로")
            self.install_vaccine.setEnabled(False)
            self.install_vaccine.released.connect(self.text_to_list)

            hbox = QHBoxLayout()

            hbox.addWidget(seq_label)
            hbox.addWidget(self.seq_data)

            self.hbox1 = QHBoxLayout()
            self.hbox1.addWidget(vaccine_text)
            self.hbox1.addWidget(self.vaccine_list)
            # hbox1.addWidget(self.vaccine_used)

            self.ck_tx_la = QPushButton('점검항목')
            self.ck_tx_la.released.connect(self.cp_cklist)
            self.ck_bt_la1 = QLabel('    점검결과')
            self.ck_bt_la2 = QLabel(' 조치여부')

            self.grids = QGridLayout()
            self.grids.addWidget(QLabel(),0,0,1,1)
            self.grids.addWidget(self.ck_tx_la, 0,1,1,2)
            self.grids.addWidget(QLabel(),0,3,1,1)
            self.grids.addWidget(self.ck_bt_la1, 0, 4, 1, 1, alignment=Qt.AlignCenter)
            self.grids.addWidget(self.ck_bt_la2, 0, 5, 1, 1,  alignment=Qt.AlignCenter)

            self.grids.setContentsMargins(0,0,0,0)

            self.running_seq = ["","",]
            question = [
                "1. 백신 설치 여부 확인 : ",
                "2. 백신 최신 업데이트 및 실시간 감시 작동 확인 : ",
                "3. 스마트폰 잠금 설정 여부 확인 : ",
                "4. 구글 Play 프로텍트 확인 : ",
                "5. 최신 보안 업데이트 확인 : ",
                "6. 개발자 옵션 활성화 여부 확인 : ",
                "7. 앱 권한 관리 (출처를 알 수 없는 앱 권한) : ",
                "8. 구글 2단계 인증 설정 여부 확인 : ",
            ]
            self.ans = ["", "", "", "", "", "", "", ""]
            self.af_ans = ["",""]
            self.stat_label = [QLabel(x) for x in question]

            self.yes_button = [QPushButton(self.stat_list[0]) for _ in range(len(question))]
            self.no_button = [QPushButton(self.stat_list[1]) for _ in range(len(question))]

            self.grid.addLayout(hbox, 0, 0)
            self.grid.addWidget(self.seq_confirm, 0, 1)
            self.grid.addWidget(self.clip_ck_box, 0, 2, alignment=Qt.AlignCenter)
            self.grid.addWidget(data_label, 0, 5, alignment=Qt.AlignCenter)
            self.grid.addWidget(self.any_confirm, 0, 6)

            self.grid.addWidget(self.save, 11, 6)
            self.grid.addWidget(self.reset, 11, 5)
            self.grid.addWidget(self.file_ck,9,6, alignment=Qt.AlignCenter)
            self.grid.addWidget(self.any_data, 1, 4, 8, 3)

            self.grid.addWidget(self.cp_ms_ck,9,5,1,1, alignment=Qt.AlignCenter)
            self.grid.addWidget(self.change_script, 0, 4, 1, 1)
            self.grid.addLayout(self.hbox1,11,0,1,4)
            self.grid.addWidget(self.install_vaccine,11,4)
            self.grid.addWidget(self.stat_now, 9, 4, 1, 1, alignment=Qt.AlignCenter)

            # self.grid.addWidget(self.ck_tx_la, 1,0,1,1, alignment=Qt.AlignCenter)
            # self.grid.addWidget(self.ck_bt_la1, 1,1,1,1, alignment=Qt.AlignCenter)
            # self.grid.addWidget(self.ck_bt_la2, 1,2,1,1, alignment=Qt.AlignCenter)
            self.grid.addLayout(self.grids,1,0,1,3)

            for x in range(1, len(self.stat_label) + 1):
                self.grid.addWidget(self.stat_label[x - 1], x+1, 0)
            for x in range(1, len(self.yes_button) + 1):
                self.yes_button[x - 1].setEnabled(False)
                self.grid.addWidget(self.yes_button[x - 1], x+1, 1)
            for x in range(1, len(self.no_button) + 1):
                self.no_button[x - 1].setEnabled(False)
                self.grid.addWidget(self.no_button[x - 1], x+1, 2)

            self.yes_button[0].released.connect(lambda: self.be_y_reg(0))
            self.yes_button[1].released.connect(lambda: self.be_y_reg(1))
            self.yes_button[2].released.connect(lambda: self.be_y_reg(2))
            self.yes_button[3].released.connect(lambda: self.be_y_reg(3))
            self.yes_button[4].released.connect(lambda: self.be_y_reg(4))
            self.yes_button[5].released.connect(lambda: self.be_y_reg(5))
            self.yes_button[6].released.connect(lambda: self.be_y_reg(6))
            self.yes_button[7].released.connect(lambda: self.be_y_reg(7))

            self.no_button[0].released.connect(lambda: self.be_n_reg(0))
            self.no_button[1].released.connect(lambda: self.be_n_reg(1))
            # self.no_button[2].released.connect(lambda: self.n_reg(2))
            # self.no_button[3].released.connect(lambda: self.n_reg(3))
            # self.no_button[4].released.connect(lambda: self.n_reg(4))
            # self.no_button[5].released.connect(lambda: self.n_reg(5))
            # self.no_button[6].released.connect(lambda: self.n_reg(6))
            # self.no_button[7].released.connect(lambda: self.n_reg(7))

            self.setFixedSize(810, 350)
            self.show()
        except Exception as e:
            log_writer('E',"Mobile Report Program Init Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def cp_cklist(self):

        text = "안녕하세요 내PC돌보미센터 점검원입니다.\n아래와 같이 8가지 항목에 대한 점검을 진행하도록 하겠습니다.\n\n"
        script_q = [
                "1. 백신 설치 여부 확인",
                "2. 백신 최신 업데이트 및 실시간 감시 기능 확인",
                "3. 스마트폰 잠금 여부 확인",
                "4. 구글 Play 프로텍트 확인",
                "5. 최신 업데이트 확인",
                "6. 개발자 옵션 활성화 여부 확인",
                "7. 앱 권한 관리 확인",
                "8. 구글 2단계 인증 설정 여부 확인",
            ]
        for i in script_q:
            text += (i+'\n')
        
        copy(text)

    def MENU_stat(self):
        log_writer('D',"Menual and Survey Setting Type Check")
        try:
            if self.cp_ms_ck.isChecked():
                self.scripts["MENU"] = "Y"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['MENU'] = "Y"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)
            else:
                self.scripts["MENU"] = "N"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['MENU'] = "N"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)
        except Exception as e:
            log_writer('E',"Menual and Survey Setting Type Check Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def CLIP_stat(self):
        log_writer('D',"ClipBoard Setting Type Check")
        try:
            if self.clip_ck_box.isChecked():
                self.scripts["CLIP"] = "Y"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['CLIP'] = "Y"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)
            else:
                self.scripts["CLIP"] = "N"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['CLIP'] = "N"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)
        except Exception as e:
            log_writer('E',"ClipBoard Setting Type Check Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def NFSF_stat(self):
        log_writer('D',"File Type Check")
        try:
            if self.file_ck.isChecked():
                self.scripts["NFSF"] = "Y"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['NFSF'] = "Y"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)
            else:
                self.scripts["NFSF"] = "N"
                with open('./script.json', encoding='utf-8') as f:
                    scripts = json.load(f)
                scripts['NFSF'] = "N"
                with open('./script.json', 'w', encoding='utf-8') as f:
                    json.dump(scripts, f, ensure_ascii=False, indent=4)
        except Exception as e:
            log_writer('E',"File Save Type Check Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def list_to_text(self):
        # print(self.vaccine_list.currentText())
        log_writer('D',"Check Vaccine List To TextBox")
        try:
            if self.vaccine_list.currentText() == '기타...':
                # self.hbox1.removeWidget(self.vaccine_list)
                self.hbox1.itemAt(1).widget().setParent(None)
                self.hbox1.addWidget(self.vaccine_used)
                self.install_vaccine.setEnabled(True)
                log_writer('D',"Change Vaccine List To TextBox")
        except Exception as e:
            log_writer('E',"Change Vaccine List Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def text_to_list(self):
        log_writer('D',"Check Vaccine TextBox To List")
        try:
            self.hbox1.itemAt(1).widget().setParent(None)
            self.hbox1.addWidget(self.vaccine_list)
            self.install_vaccine.setEnabled(False)
            self.vaccine_list.setCurrentIndex(0)
            log_writer('D',"Change Vaccine TextBox To List")
        except Exception as e:
            log_writer('E',"Change Vaccine List Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def return_Press(self):
        log_writer('I',"Req_num Check")
        try:
            seq_re = re.compile("\d{4}\-\d{4}\-\d{5}")
            text = self.seq_data.text()
            temp = seq_re.match(text)
            if temp:
                self.seq_num = temp.group()
                self.running_seq[0] = "y"
                self.seq_confirm.setStyleSheet('font-weight:bold')
                log_writer('I',"Req_num Checked, AnySupport Data Text Box Activated")
                if self.running_seq[0] == 'y' and self.running_seq[1] == 'y':
                    for i in self.yes_button:
                        i.setEnabled(True)
                    self.vaccine_used.setEnabled(True)
                    self.vaccine_list.setEnabled(True)
                    log_writer('I','Both Check Complete Activate Check Btn')
            else:
                log_writer('W',"Req_num Not Found")
                QMessageBox.about(self, "알림", f"예약번호의 데이터가 감지되지 않습니다.\n예약번호를 확인해주세요.")
        except Exception as e:
            log_writer('E',"Enter Module Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def enable_any_data(self):
        log_writer('I',"AnySupport Data Check")
        try:
            if (
                self.any_data.toPlainText() == ""
                or len(self.any_data.toPlainText().split("\n")) < 19
            ):
                log_writer('W',"Don't Check Complete AnySupport Data")
                QMessageBox.about(self, "알림", f"애니서포트 에서 복사된 데이터가 인식되지 않습니다.\n확인하여주세요.")
            else:
                log_writer('I',"AnySupport Data In")
                self.running_seq[1] = "y"
                self.any_confirm.setStyleSheet('font-weight:bold')
                if self.running_seq[0] == 'y' and self.running_seq[1] == 'y':
                    for i in self.yes_button:
                        i.setEnabled(True)
                    self.vaccine_used.setEnabled(True)
                    self.vaccine_list.setEnabled(True)
                    log_writer('I','Both Check Complete Activate Check Btn')
        except Exception as e:
            log_writer('E',"AntSupport Data TextBox Init Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def reset_press(self):
        log_writer('I',"User Input Data Reset")
        try:
            self.seq_data.setText("")
            self.any_data.setText("")
            for i in self.yes_button:
                i.setStyleSheet("")
                i.setEnabled(False)
            for i in self.no_button:
                i.setStyleSheet('')
                i.setEnabled(False)

            self.install_vaccine.setEnabled(False)
            self.vaccine_list.setCurrentIndex(0)
            self.vaccine_list.setEnabled(False)
            self.hbox1.itemAt(1).widget().setParent(None)
            self.hbox1.addWidget(self.vaccine_list)

            self.vaccine_used.setText("")
            for i in self.stat_label:
                if "취약" in i.text():
                    temp = i.text().replace("취약", "")
                    i.setText(temp)
                elif "양호" in i.text():
                    temp = i.text().replace("양호", "")
                    i.setText(temp)
            self.ans = ["", "", "", "", "", "", "", ""]
            self.running_seq[0] = ''
            self.running_seq[1] = ''

            self.seq_confirm.setStyleSheet('')
            self.any_confirm.setStyleSheet('')

            self.stat_print()
            log_writer('I',"User Input Data Reset Complete")
        except Exception as e:
            log_writer('E',"Reset Module Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def be_y_reg(self, n):
        log_writer('D','Before Check Task Changed')
        try:
            idx = self.stat_list.index(self.yes_button[n].text())
            # 1 = 양호
            # 2 = 취약
            idx = (idx%2)+1
            if idx == 2 and (n == 0 or n == 1):
                self.no_button[n].setText(self.stat_list[idx])
                self.no_button[n].setEnabled(True)
                self.af_ans[n] = self.stat_list[idx]
            elif n == 0 or n == 1:
                self.no_button[n].setText(self.stat_list[1])
                self.no_button[n].setEnabled(False)
                self.af_ans[n] = ""
                self.no_button[n].setStyleSheet('')
            self.yes_button[n].setText(self.stat_list[idx])

            if self.clip_ck_box.isChecked():
                log_writer('D',"Script Copy")
                if idx == 1:
                    if len(self.good_text[n]) >= 2 and type(self.good_text[n]) == list:
                        copy("\n".join(self.good_text[n]))
                    else:
                        copy(self.good_text[n])
                elif idx == 2:
                    if n == 6:
                        text_temp, ok = QInputDialog.getText(
                            self, "앱 권한 취약점", "앱 이름을 적으세요. (다수입력시 : Samsung Notes, Chrome ..."
                        )

                        if ok:
                            if len(self.bad_text[n]) >= 2 and type(self.bad_text[n]) == list:
                                for i in range(len(self.bad_text[n])):
                                    if "대상 어플" in self.bad_text[n][i]:
                                        index = i

                                if not index:
                                    copy("\n".join(self.bad_text[n]))
                                else:
                                    self.bad_text[n][index] += text_temp
                                    copy("\n".join(self.bad_text[n]))
                                    self.bad_text[n][index] = self.bad_text[n][index].replace(
                                        text_temp, ""
                                    )
                            else:
                                copy(self.bad_text[n])

                    elif len(self.bad_text[n]) >= 2 and type(self.bad_text[n]) == list:
                        copy("\n".join(self.bad_text[n]))
                    else:
                        copy(self.bad_text[n])

            if "취약" in self.stat_label[n].text():
                temp = self.stat_label[n].text().replace("취약", "")
                self.stat_label[n].setText(temp + "양호")
                self.ans[n] = "양호"
            elif "양호" in self.stat_label[n].text():
                temp = self.stat_label[n].text().replace("양호", "")
                self.stat_label[n].setText(temp + "취약")
                self.ans[n] = "취약"
            else:
                self.stat_label[n].setText(self.stat_label[n].text() + self.stat_list[idx])
                self.ans[n] = self.stat_list[idx]

            # print(self.ans)
            if idx == 1:
                self.yes_button[n].setStyleSheet('color:#0077FF;font-weight:bold')
            elif idx == 2:
                self.yes_button[n].setStyleSheet("color:red;font-weight:bold")
                if n == 0 or n == 1:
                    self.no_button[n].setStyleSheet("color:red;font-weight:bold")

            self.ans[n] = self.stat_list[idx]
            self.stat_print()
        except Exception as e:
            log_writer('E',"Check Before Task Change Module Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)
    
    def be_n_reg(self, n):
        log_writer('D','After Check Task Changed')
        try:
            idx = self.stat_list.index(self.no_button[n].text())
            # print(f"a:{idx}")
            idx = (idx%2)+1
            self.no_button[n].setText(self.stat_list[idx])
            self.af_ans[n] = self.stat_list[idx]
            # self.stat_print()
            
            if self.clip_ck_box.isChecked():
                log_writer('D',"Script Copy")
                if idx == 1:
                    if len(self.afterg_text[n]) >= 2 and type(self.afterg_text[n]) == list:
                        copy("\n".join(self.afterg_text[n]))
                    else:
                        copy(self.afterg_text[n])
                elif idx == 2:
                    if len(self.afterb_test[n]) >= 2 and type(self.afterb_test[n]) == list:
                        copy("\n".join(self.afterb_test[n]))
                    else:
                        copy(self.afterb_test[n])

            if idx == 1:
                self.no_button[n].setStyleSheet('color:#0077FF;font-weight:bold')
            elif idx == 2:
                self.no_button[n].setStyleSheet("color:red;font-weight:bold")
            
            # print(self.af_ans)
        except Exception as e:
            log_writer('E',"Check After Task Change Module Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)

    def save_b(self):
        log_writer('I',"Save Sequence Start")
        try:
            u_data = {}

            report_data = b'PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\tj\'\rz\x01\x00\x00\xad\x06\x00\x00\x13\x00\x08\x02[Content_Types].xml \xa2\x04\x02(\xa0\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb4\x95\xcbN\xc30\x10E\xf7H\xfcC\xe4-J\xdc\xb2@\x085\xed\x82\xc7\x12*Q>\xc0\xb5\'\xadE\xfc\x90=}\xfd=\x93&\x8d\x10*\r\xa2\xcd&\x923s\xef=\x9eH\x93\xd1dk\xcad\r!jgs6\xcc\x06,\x01+\x9d\xd2v\x91\xb3\x8f\xd9Kz\xcf\x92\x88\xc2*Q:\x0b9\xdbAd\x93\xf1\xf5\xd5h\xb6\xf3\x10\x13R\xdb\x98\xb3%\xa2\x7f\xe0<\xca%\x18\x113\xe7\xc1R\xa5p\xc1\x08\xa4cXp/\xe4\xa7X\x00\xbf\x1d\x0c\xee\xb8t\x16\xc1b\x8a\x95\x07\x1b\x8f\x9e\xa0\x10\xab\x12\x93\xe7-\xbd\xaeI\x02\x94\x91%\x8fuc\x95\x953\xe1}\xa9\xa5@\xaa\xf3\xb5U?R\xd2&!#\xe5\xbe\'.\xb5\x8f7\xd4\xc0\xf8\xd1\x84\xaa\xf2{@\xa3{\xa3\xd1\x04\xad \x99\x8a\x80\xaf\xc2P\x17\xdf\xb8\xa0\xb8rreH\x99\x9d\xb69\xc2\xe9\x8aBKh\xf5\x95\x9b\x0fNB\x8c4sSfm\xc5\x08m\x0f\xfc\xbfr\xd8\x95\x99C \xe5\xe5AZ\xebN\x88\x88\xbb\x12\xe2\xe5\tj\xdf\xeex@$A\x1f\x00\x8ds\'\xc2\x06\xe6\xef\xbdQ|3\xef\x04)\x9cC\xeb\xb0\x8f\xaf\xd1ZwB\x80U=1\x1c\x9c\xff0\x07J\x14\xf3\x12\xfa\x98Cc\xdd\t\x81\xb4\x0e\xa1~\x0e\xcf\xe6\xd8\xdb\x9c\x8a\xa4\xceip>\xd2z\r\xff\xb8\xf6a\x7fV\xea\x94.\xec!\xa0>=\xe96\x91\xac\xcf\xbe\x1fT\xabY\x81:\x92\xcd\xf7?\x9b\xf1\x17\x00\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x1e\x91\x1a\xb7\xef\x00\x00\x00N\x02\x00\x00\x0b\x00\x08\x02_rels/.rels \xa2\x04\x02(\xa0\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x92\xc1j\xc30\x0c@\xef\x83\xfd\x83\xd1\xbdQ\xda\xc1\x18\xa3N/c\xd0\xdb\x18\xd9\x07\x08[IL\x13\xdb\xd8j\xd7\xfe\xfd<\xd8\xd8\x02]\xe9aG\xcb\xd2\xd3\x93\xd0zs\x9cFu\xe0\x94]\xf0\x1a\x96U\r\x8a\xbd\t\xd6\xf9^\xc3[\xfb\xbcx\x00\x95\x85\xbc\xa51x\xd6p\xe2\x0c\x9b\xe6\xf6f\xfd\xca#I)\xca\x83\x8bY\x15\x8a\xcf\x1a\x06\x91\xf8\x88\x98\xcd\xc0\x13\xe5*D\xf6\xe5\xa7\x0bi")\xcf\xd4c$\xb3\xa3\x9eqU\xd7\xf7\x98~3\xa0\x991\xd5\xd6jH[{\x07\xaa=E\xbe\x86\x1d\xba\xce\x19~\nf?\xb1\x973-\x90\x8f\xc2\xde\xb2]\xc4T\xea\x93\xb82\x8dj)\xf5,\x1al0/%\x9c\x91b\xac\n\x1a\xf0\xbc\xd1\xeaz\xa3\xbf\xa7\xc5\x89\x85,\t\xa1\t\x89/\xfb|f\\\x12Z\xfe\xe7\x8a\xe6\x19?6\xef!Y\xb4_\xe1o\x1b\x9c]A\xf3\x01\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x006H\x95h\x1d\x01\x00\x00\xbe\x04\x00\x00\x1c\x00\x08\x01word/_rels/document.xml.rels \xa2\x04\x01(\xa0\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x94\xcdN\xc30\x10\x84\xefH\xbcC\xe4;qR\xa0 T\xa7\x17\x84\xd4+\x84\x07p\x92\xcd\x8fp\xd6\x91\xbd\x05\xf2\xf6XEIS\xa8\xac\x1e|\xdc\xb1v\xe6\xd3\xc8\xf6f\xfb\xdd\xab\xe8\x13\x8c\xed4\n\x96\xc6\t\x8b\x00K]u\xd8\x08\xf6\x9e\xbf\xdc<\xb2\xc8\x92\xc4J*\x8d \xd8\x08\x96m\xb3\xeb\xab\xcd+(In\xc9\xb6\xdd`#\xe7\x82V\xb0\x96hx\xe2\xdc\x96-\xf4\xd2\xc6z\x00t\'\xb56\xbd$7\x9a\x86\x0f\xb2\xfc\x90\r\xf0U\x92\xac\xb9Yz\xb0\xec\xc43\xdaU\x82\x99]\xe5\xf2\xf3q\x80K\xbcu]w%<\xebr\xdf\x03\xd2\x99\x08Nn\x17\x9c\xa14\r\x90`\x87\xf1WLcg\xc6\xf8y\x86\xdb\x90\x0c\x16\x88\\\xbb\xf6\x881)>\x84\x87\x90\x08\xb5F\xcae\xa1\x16U\xcc\x92\x0fb\x15\xb4\x07\x1a\x15,[8\xcc\xbe\xf84d<\xee\xfb\x02\x8c\xab\xfdH0K>\x88uH\x08\xc0\n5-[\x98\x14\x1f\xc2}\xd8\xbb\xa0\xe9\x0f\xc3,\xf9 \xeeBB|A\xf1\xf6\xefY,\xc4\t\x84\x9f\xfc:\xd9\x0f\x00\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x19\xb3\xc2Ut\x0e\x00\x00.\xcd\x00\x00\x11\x00\x00\x00word/document.xml\xec][o\xdbF\x16~_`\xff\x03\xa1\xa7\xdd\x87V\x9c!9$\x8d&\x05\xaf\xdd`\xdbE\x90^\xf61\xa0$\xda\xd6F\x12\x05\x8a\xb6\xe3>\xa5]\xb7\x08\x92\x14i\xd1x\x9b`\x9d"\x01\xba\xbd!\x8bus)\xbc@\x7f\xcd>Z\xf4\x7f\xd8\xb9\x90\x12\xa9\x9be\xc6\xb1\x18y\x1c \x12\xc9\x99\xc3\xc3\x99\xf3}s\xf8\xcd\x90z\xeb\xed\xeb\xed\x96\xb0\xe9\x87\xbdf\xd0\xb9P\x01o\x8a\x15\xc1\xef\xd4\x83F\xb3\xb3v\xa1\xf2\xe1\x07\xee\x1bZE\xe8E^\xa7\xe1\xb5\x82\x8e\x7f\xa1\xb2\xed\xf7*o_\xfc\xfd\xef\xde\xdaZi\x04\xf5\x8d\xb6\xdf\x89\x04l\xa2\xd3[\xd9\xea\xd6/T\xd6\xa3\xa8\xbbR\xad\xf6\xea\xeb~\xdb\xeb\xbd\xd9n\xd6\xc3\xa0\x17\xacFo\xd6\x83v5X]m\xd6\xfd\xeaV\x106\xaaP\x04"\xfd\xd6\r\x83\xba\xdf\xeb\xe1\xf3Y^g\xd3\xebU\x12s\xf5\xeb\xf3Yk\x84\xde\x16\xaeL\x0c\xca\xd5\xfa\xba\x17F\xfe\xf5\xa1\rpb#JU\xafj\xe3\x86`\x01C\xf8\n!\x187%\x9d\xd8\x14\xaa\x12\xaf\xc6\x0c\xc9\x85\x0ca\xaf\xc6,)\xc5,M\xb88T\xcc\x12\x1c\xb7\xa4\x16\xb3$\x8d[\xd2\x8aY\x1a\x0b\xa7\xf6x\x80\x07]\xbf\x83\x0f\xae\x06a\xdb\x8b\xf0f\xb8Vm{\xe1\xb5\x8d\xee\x1b\xd8p\xd7\x8b\x9a\xb5f\xab\x19mc\x9b"J\xcdx\xcd\xce\xb5\x02\x1e\xe1Z\x03\x0bm\xa9qb\x0bj\xb5\x1d4\xfc\x96\xd4H\xad\x04\x17*\x1bag%\xa9\xff\xc6\xa0>q}\x85\xd5O>\x065\xfc\xd6|\xa7\xc5\xa7\xd3\xab\xfe\xf5\xa8\xd5\x8b\xd2\xba\xe1<m\xc7\xaa\xdb\t\xb1\xd0V\xab\x86~\x0b\xb7c\xd0\xe9\xad7\xbb\x03vh\x17\xb5\x86\x0f\xae\xa7F6g5\xc0f\xbb\x95\x96\xdb\xea\x829\xa16\x8d\xdal\xd6\rC\x83\xf3\xb8\x9f\xf4]\xbb\xc5<\x9fm\x11\x88s\xf4&11\xa81\x8f\x0b\xf9s\xa6\x9e\xb4q\x04\x0fO\\\xa8i2\x8d\x0b\xe6$\x9f\xd4\x00\x1c3\x80\xea\xfe\x9c\x83EjCKlT\xebCt\x13;\xcd9a\x95\xdaa\xbdB\xec4\x87\r\x0b\xe6\xe4\xc0Qg2\x06z\x8d\xa8\xb1~"+0m\xd7*\xa9\xebE\xde\xba\xd7\x1b\x04:\xb1\xe8\x9f\xcc)e`n\xbb\x9di\xa3\xee\xda\xcb\x01\xe1\x9d0\xd8\xe8\x0e\xad5_\xce\xda\xa5!%n\x91\xe4\xe4\x04\xb6\x12@eA\xde{9g\xde_\xf7\xba\x98)\xdb\xf5\x95Kk\x9d \xf4j-\xec\x11\x86\x87\x80#\\\xa0=@\xfe\xc7\x81B>\xe8W\xff:\xddO\xfaZ \x1cS\xb9\x88\xb3\xaaZ\xd0\xd8&\x9fQ\xad\x95|\\\x0e\x93/\x7f\x15\xb6\x08lq\x8a\x867\xb7\xbb\xd8\xbc\xb7\x11\x05\x95jr\xf8R\xa7\xc1\n\x00\x11\x0e\x8b4\xae{\x83\x12\x96\xdfj\xbd\xe7Qs-\x7f5JKO(\x1c6\xd7\xd6\xa7\x1f\xaf\x8eZ\xc3[\xef\x06\xc15\\n\xd3\xc3C\x84(\x1b\xb4\xd2j3\xecEW\x02b\x84l\xb6\xbcdkx\xd0\nZ\x1bm\x92x\xa6\xc7\xd3\x1d\xb4H\'\xf8\x93\x89S\xcf\xc1\xd6Gl\x0b\x0c}\x18\xb4\xcd;a\xb3A\xbe\xae\xe1Olc\xd0\x10\x1a\xbb\x9e\xdcnIB\xea\xd0DZ3\n\xf1Q\x9c\x077\xae\xe0\xf3\x89PU\x90LN\x0b\xe4\x95\xae\x17z\x97\x88\x17\x96"\xdb\xaai\xb3\xbd81\x88\xc8^5\xf9\xa3\xbd\x17\xd5\xd9\xff\x89_\xf5\xa4\xcb\xa8#\x13\xba\xa4n\xe2\x10\xc2\xc97\xdd\x08\xbai\xfb\x91pj\xf9\xa4B\xef\xe3\x0b\x15\xda\x99\xbd\xaeW\xf7\x93\x86\xa8\x07\xad $N\xca\x8e\x01\x99\xa5\xa4;\x0b\xd6\xae\x05Q\x14\xb4\x8b\xd7O\xa3\xa5Pu\xd2\x0b\xd9v\xe8\xad\x930\xa6\xa6\xea-\xdf\x0b3\x95h\xb8\xd3\xd0i\x91(\xcbx\x10\xd5\'\xc4\xf5$\x14\xe4\x02{\xbc\x00u&1\xb5i\xb4\x9ak\x9d\x81/8\x85\xf0\xc3A\x19\xd6\xc1\xdd\\|\xa8Pu$\xd10\xa6\xc4\xc7\xc4\xf0b\xbbl\x7f\xd5\xdbhE\xe4\x88\x08$\xe00*\xe8\xb2\x93\x90\xd6\xc3m\x8a\xcbz\xab\xd8\x85\xa4\x1d[M\xc2x\x90\x19!\x1bW6\x08\xe1\x0c\x19\xe1o\xf5q\xd7\xf1\xe9\x98\xcd\xd0\r:Q\x8f\x98\xec\xd5\x9b\x98\x85\xfb?|\x15?\xbc!\x1c>{\xd4\xbf\xb7K,\xfa\x18\x8bF\xaf\xe9M8\xb4ntz\x93\xaa\xd4{\xa3;Yc\xd1SV\x07\x97\xc3\xfe;c7\x92\x10J[\xc4\xa5\x7f\xec@\xef\xe3t/L\xe31\xf1.\xbax\xc5\xef\x06aD{\x9c\x1d`\x17\x92\xc4\xc0\x0c\xc0S\x8a\x19\x8f>\x0e\xf8\x93\x01^\xa4\x7fC\xc8g\xfb\xad\x14\x90G\x0e\xb0\x1d\xd5\xb68\xe4K\x08\xf9\xda8\xf0\x93\x80\x1a\x81y\xff\xe7\x1f\xfb\xfb\xf7\xe2\x87\xbf\t\xfdg\xcf\xe3\xdd\x9b\xf1\xa3/\x0f\x9fb[O\xf7\x0f\x9f\xfd\x86wa\xa3\xf1\xce\xdet\x1a \x1fl_\x92\xb5\xe5\x83\x04\xda\x8e\x025\x91d\x00\xaf&Hj>\xbei\xc3\x91\x00\x10\xad\x9a\xc4\x8c\x96\t\x1a\x89\x1d)o\xd0dyX\xcauP\x19\xc3\x08"\xf2o\xb6\xdf4\xb0>}~\xd9\xea\xdf\xbd\x83c\xa8\xff\x9f\x03\xe1\x7f7\xbe\x16\x86\xb1\x16\xff\x13G\xd9O\x93BnB\xa4\x8d\xc6\x94lJ\xb6\x06\xd4i\xb9h\xd1\x98\xeal\xb4\xd9\x97fk\x93d\xcb\x0c4\xecB\xf1\xb1K\x03\xa6Ns\xf0A\x85\xf1h\xcc\x05\xe3\x90\xb4f2X\x93\xde\xc3\x10F\xc7\xc54\x99\xf6\x96\xd7Yk\x125\x9al/(6Y\x08d2\x05\xda\xf7%\x8b\xd0i\xee\x91Xb\xe1\xd5\xbfs#\xfe\xfb\'sD\x17\x00\xba\xad"ydXC\x06T\\S\xa3w2\x0b\x8b\xae\x13\r\x88\xd9pR\x10u|<\x9c\x86\x04H\n\x9e\xeb13\x132D\x16I\xf3\xb8n\xe8\xf7\xfcp\xd3\xaf\\\xc4L\xd5\xffz\xaf\xffx/~\xf8\x1c\x7f\x11\xfaOw\xe2G;+B.\xa6\xf05\x84A\xb0\xea\x84\x84/Y\xae\xd5\xeb\xfa\xad\xd6\xfb\x91\x17\xa6\xed\x9b\r!\x11B[wi\xa0,\xf0\x82/\x1a\x9dF\x184\x1bW?b\xb3as]\x92\xd3i$f&\xa0\x08\x89\xb6(\x9an\xa2"\x0cP\xa4\xaa\x8a\x82D\x9d\xa3\xe8\xdc\xa2\x88\xe4\x00_\x1c\xf4\x9f\xde<\xba\x7f\xb0\x1c\xd8y\x8fL-]\x1d\xb9\x92\x9c\xa3\x08\x87\xb1k.\xdc\xd1\xbfl\xb4k~\xf8\xf2\xd8\x86\x1aB\xb6*\x11\x14g\xb0\r\x81!\x89\xb6C\xc6M\x8e\xede\xc76N\xaa\xf6\xe2\xc7\xfb\xf1\xa7Of\xc5}9\x00:\x99\x87^\x92{J\x02i\xc6=\xefy\xd7N\x03\xd7\xa2\xa5\x98\x08XN\x1e\xd7\xb2e\xeb\xa6)\xf1\xcc\xf7\\\xe0\xfa\xe8\xf3\x17\xf1\xedG\xe7\x17\xd7*\x99\xc4X<\xae\xcd0\xf0\x1aWM\xbf\xd38\r`+\xaa+BCAy`C(\x1a\xae\xe6\x90)\x9b\xe1\xf5\x9b\x12\x14\x1di\xb0\xeb2\x15\xa2Gvf\xd0\x9e?r9\xb3\x8b\x13\xc0kB\x00\xa4p\xb3\x83[*\xb56\x1a\x8b\xfd\xfd_0%\x8c\xf2\xc1\xeb\x01\xfe\x1c\xb6\xa1\x823\xd7\xc5c\xfb\xc3\x9e\x8fo\xb4\xbd:\x8el?\xe7\xee\x14\xf0\x02M\x95\x01\x98g\x9a\xe5X\x9cf@y\n\xd0\x82\x08\xe9\xe5\xc5\xd2\xe4\xd6Tu\xa0\xe2{\x17\xd2H\x0b\xd1\x8e\xd3Y@\xae\x1d/<\xed\x99_;\x9e13\xf1\x12K\x95\xe8x\xccW*U\x00P\x93\xe9\xa4\xdcnE\x12\x13v\xc9\x97\x96@\x82\xab\x11#H\x19\x9ep\xfeuMH\xb5\x0c\xd76\xc9\xd4\xf8\x0c>\xf8\x80\xcd\xc7\x0f\xd3\xdeik\x9d\xc8\xa5L\xe8\xd4\xb9\x96>P\xd4N\\=\x90\xce\xdb\x0e\x02\xa2`\xedYK\x1f\xe6\xa9?c\xe9\xc3\xf1\xd5I\xcf\xbc\x8a\xb5N\x13a\x94A\xc6\x84\xe3\xd4\x95\xa2\xcb\x1e 4TS\xb3Il\x9c\xe6\x08\x12y5\x16\x1e^-u\x86\x8e\xa5x\xa3\x1b`\xfa\x02\x1aJz!S"q7-\x03\xa14@]b\x8e\xaf\xa6xE\xd3\xe0\xc3\xe58\xb9\xf1\xe2\xfe\'\xf17\xff\x9e0R\xd0p\x9a\xc1\x1c\x94\xed\xc6\xe3\x983\xc7\x121\x07\x1e\x1c\x0c\x0b\xe9J\x853\x07g\x8e1\xe6`\x8b`\x8ev\xff\xdd\xff\xf9\xa7\x02\x04B\xf3\xa2\xf1p\xe6\x04\xb2D\x04\xa2"EtU\x9a\xb5\xf3\x15\x97\xaf9\xd2\xa7\xdeS\x1e\x0btr\xa73\x1ev\x1c\xe8\xcb\x94)\x98\x92f\xe8\xaa\xc3\x81\xfeZ\x03\xfd\xf1~\xfc\xdf\xfb\xf17O\xfa\xbf\xde\x98\x0et\xf2\xc1*\x10s\x83~UD \xbaI\x00\x0c\x16\xbeZ\x92\xe2\x02sd\x1eg\xb2X\xe1\x1a\x08\xe8L\xec\xe6b\xc5\xab$\x92\xa4\x920\xe7s\x1ag\x9e3\x00URew\x9e\x05\xf8\x83\x90\x1b\xa3\x92\xfc\x11:\xcd\x97\xec\xe2\xec\xf2J\xdc d\x01\n$\x07\\Fx\x05\xc9AF\xbe/\x01\x9e\x15\xc5\xc4\xd8\x9bG~\\\x0c\x9e\xd9T\x14\x9d7x\x97\x95M{\x8f\xcf\xb8O\xc49\x9b_\x17\xe2\x9d\xefp\xb6 \xb0tA8z\xb0\x1b?<(r{\xc0u\x80%g\x00\xd9\x04\x96\xa6\xc9d2.\xc3\x00\x12\x82\xa2\tt\xda\x08|D/\t\xd2I\xe1\x99kk\xac\x1c\xc2K@F\x7f\xbej\xbaW\x8bd\x1e\\\x96Xv\xde\x81\xa2!9\xae\xedVr\xbc\xa3\xe8\x92)\xeb2\xd9;\x0f\xef\xd8\x9a,\x0e\xd7\x12s\xde\xe1\xbc\x93\xf2N\xd9<2\xca\xe6\xd0L^&\x1f\xac\\8\x11\x88\xd9\xfc\x01X60\xd4\xb9\x96\xbcX\xaad\x9b6\xc5&W\x91\xce\xb1\x8a$[\x1a2\xf5\xe3\x96I\xf1\x9c\xb3\x04\xdc?\xc2\x1a\xb0@.\xc7U\xa4e\xcf\xe5\x90\xaa9\x86c\x92K\xe4*\xd2R\xe0<U\x91^\xec\xd1\x8fo>\xeb\x7f\xb1\x1f?|~t\xeb@\xe8\xef\xdf\x15\xe2\xdb\xdf\xc5\xb7\xf7\x0e\xf7w\x84\xc3\xfd/\xf17!\xfe\xf6\xab\xfe\xdd\x07\\g:\'\x1c1\x83\tlQ3\x8d\xb1g\xc3lE\xb6\xa8\xca\xccG\xf6)\x88O\xdb\x81=#\xa7I\xc024z\xbd%\xbf\xd5+\x87\xdf#^R\xddi\xd4\xd3E;U$w\xe2:\xd8r\xf0\xa2\x8c4CF\xb6Y\xc9gH\x16TL\xe4\xd2\x07a\xb8\xdaU\x92L\x88\x14~\xdd\xd4.\xe3\xb4\xd4\x1cU\x06\x8a*\x89\xc7<\xd0\xc8\xd5\x9c3e\xaf\xa4\x92P\xd65A\xb2j!\x9b>\xf9\xcf\xd5\x9crs\xdb\x08qH\x052\x12\xae\xe6,\xbd\x9a#\xeb@G\xc8.-\x9e\xb9\x9as2\x9cOy\x01\xe5\xad\xef\xfa?\xdc<\xbauptw_\x88\xbf}txp\x93\xae\x1az\xb4\x9b_5\x94\x7f\t\xc6|$\xc1\xe5\x9c%\xb9m\x11e\xd9\xb2\xb5\x91\x89\x1a\xc5\xd1\xa1b\x9b\xf9W\xfd\xf0\xa1=\x07\xf9\xb4\x1d\xb8\x9cs*78%\x94s\x8a$O\\\xceY\x0e^\x84\x86f\x99\x16\xfd\t\x8c\x0c/\x8a:\x90\xa0m\xd2K\xe5\xbcxl*T\xa3>\xd1.M\x9d%\xb10\xe1\xc9\xa7\x7f|ut\x7f\xc6\xac\x12\xf9`E\x89\xa1\x99\xfa\x06RtI\xb5t\xbeZ\x85\xeb\x1b\xf3\xeb\x1b\x8acH\xcaq1\xc3\xc1>\x13\xec\x0b\x19\xa2\xe5\x02C4\xd77\x96]\xdf\x90\x14\x80\xf0P=\xf2\xc4\x03\xd77^[\x9cO\xd67\x0e_<9<\xb8!\\ny\xdb\'\x7f\x89\xef\xa2\x99\xeb\xe8\xdeN\xff\xf1\xde\xd1g_\x1c\xdd\xca\'>\xd3\x9cO\xde\xd8[\xd6\xce\xe0+\x83\xa6\xd4??\xb7L:B\x06\xa0\xa2Q\xf693]\xb7\x1d]\xe4R\xd2\x0cvM\xdb\x81KI\xa7@\xac\xa5\x94\x92\x8a\xe4\xa9\\JZ\x0e^D@Q\x81\x01G~\xfeF2\x90.\xcbF\xfe\xa7\xad8/N\xcb:k\xd4\xa7\xb3\x95\x92$M3\x0cG& \xe4RRY\xe0\x9cT\x12J*%!\x04\x1c[\xd7F\xc0\xce\xa5\xa4\x13\x81}!C\xb4R`\x88\xe6R\xd2\xb2KI\xb2\xa6Y\x92*\x8d\x8c\x01\x92jJ\xa2\n\xcb0\x0f\xc4\xa5\xa4\x13\xe2<y\xe2\x89\xfd\x94t\xfe\xc1\'.aL\xae\x7f\x8e\x16\xf1C\xc7r\xe9\xcb)2hG\xa2\xa6\x9b\xaeA\xf6\xf2\xd1{\n\xaa\xd3v\xe0\x12\xc6)PT)%\x8c"\xf9\x11\x970\x96\x83\x17E\xcb\x96\x1cM\xb5+\xf9\xbb\x1a\xc9\x00\xa6+S\x8b\x9c\x17\x8f\xcdvj\xd4\xa7\xb3\x950TW\x85\x96a\x1ds;\xca%\x8c3\x85sRI(\xa9\x84!\x99\xb2\x85\x8e}B\x8c\x83}&\xd8\x172D\xa3\x02C4\x970\x96]\xc2P-\xd5\x85\x8612x\x8b\xba&;P)\xc3M\r\x970N\x88\xf3\xc3\xfd\xbd\xfe\xfe^\xfc\xed\x97B|\xffE\xfc\xd9}\xe1\xe8\xc1^\xbc\xf3\xcb\xd1\x83{\xfcu\xc0<cO\x96\xc0\xe9\np\xcc\x91\xd7~\xcb\xaa\xe1\x18&\xa4\x97\xc7\x07\xf1\xc9\xe0N\xdb\x81+\x19\xa7\xc0T\xa5T2\x8a\xa4I\\\xc9X\x12^\x94-M\x92\x8c\x91EjPF\xa6\x8a\xb4\xc1\x9bW8/\x8e\xf3b\xc6\x8d\x1a\xf5\xe9l\x95\x0c\xa4h\xa2\xac\xa8\xa3\xef\xd7\xe1J\x06W2\xa6\x82]\x05\xb6\x81,\x8d\xbf\xb7\xe4\xb5\xbb\xc3Q\x0b\x0c\xd1\\\xc9Xv%\x03I\x1a\xb4mH\x12\xb1\xec\xe0-\xea\x8e\xa4\xd07\xafM\xc53K\x8a\x93_8Lwry\xa3\x9c\xe0\x8fw\x7f\x11\x0e\x7f\xbds\xb4\xbb\'\x1c>\xbf\xd1\xff\xfe\xc9\x1f\xe2_\xf7\xe2\xa7\xf7\xfb\xff\xfaM\x88w\xef\x08\xf1M\xf2\xb3G\x9f\xf7o\xdd\x13H\xd1\xe4\x87\x90X\x8d?r\xe9\xe3\x9c\xf0\xc7T\x96\x80\x0e2,\xdb"\x17\x92a\t\xc5\xb6lWsx\x8a?\x03\xf8i;p\xe9\xe3\x14X\xac\x94\xd2G\x91\xbc\x8aK\x1f\xcb\xc1\x8b\nD20\xb5\x91y]\xc5\x90E\xddt\xf8"\x8e\xf9\x12\xa2\x1a\xf5\xe9\x8c\xa5\x0f$!([\xc7<\xce\xce\xa4\x0f\xa4\x00 K\xb43\xb8\xf4\xf1*\xe1\x9cT\x12J*}\x88\xb2\x8bT\rZ\xb3c\x86\x83}&\xd8\x172Dk\x05\x86h.},\xfd"\x0e\x07Y\x0eR\xc9\xe5f\xe7s\x15\x17:\xb2C^\\\xb4h<s\x95\xe3\x848O\xde^\x02\xfb\xb7\x7f<|\xb6#\xc4\x0f\x0f\xe2\xef\x1fN|?k\x91\x9c\x9dk\x19K\x91\xb3K\xd0\x06.T\x92\x84p\x00{\x13\xd8\x8aQ\n\xd8s-c\xa6o\xa40\xd72\xca\x93(q-cIx\xd1\x94M\xcb\x91\xedJ\x8e\x17%\xa4\x1a\x8e6{&\x88\xdf\xde\x0c\xdc\xa8Q\x9fNO\xcb \x1f\xb5\xd6xg\xc9\x08Z.\xd2\xe7y\xa0\x00\xaa\nb\x8d:\xdaY\xc9\x91L\xcf\xb0\x8c\x93\x86\x12>\xc7\x00\x02\x0bnb\xd608n\xfczt\x99\xb4\xeb\xe8\xb5\xd1+X{\xffc\x16\xfe\x00\xe8"E\xc0:\xfe\x8e4IcW\xd1]\xc3\xf1Op\x11t\xf1~Ud? \xc5.\x15\xc8\xac\x85\x18Y\x0c\xb7\t\xe6\x86[\xeb\xbe\xd7 \xe1\xaa)\xb4\xeej\x10\xd0\xe8\xd5\xe9[NW\xd66\xa2$\x98\xd3\x18 m\x95\xd0\x83\x0c\x15\xb6\xbb\x11\xd4\xdf\t\x9b\xa4\x95I\x88_nF\xf5u\x02\xb2\x94-\xd8%\xd2\xaf\xb5\xa0\xb1M\xbf\xe0*\x1bm\x1c\xf1\x17\xff\x0f\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00NX\xe8\x07\xbe\x02\x00\x00\xc7\x0b\x00\x00\x11\x00\x00\x00word/endnotes.xml\xd4\x96Ks\x9b0\x10\xc7\xef\x9d\xe9w`\xb8;\xe2\xe1W\x98\xd89\xd4q\'\xb7L\xd2~\x00E\xc8\x86\tz\x8c$\x8c\xfd\xed\xbb\xe2\xe9\x06\xd7\x83\xc9\xa9>\x18\x90\xb4?\xed\xfe\xb5\xbb\xf0\xf0xd\x99s\xa0J\xa7\x82\xaf\\\xff\xces\x1d\xca\x89\x88S\xbe_\xb9\xbf\x7fm\'K\xd7\xd1\x06\xf3\x18g\x82\xd3\x95{\xa2\xda}\\\x7f\xff\xf6PD\x94\xc7\\\x18\xaa\x1d@p\x1d\x15\x92\xac\xdc\xc4\x18\x19!\xa4IB\x19\xd6w,%Jh\xb13wD0$v\xbb\x94PT\x08\x15\xa3\xc0\xf3\xbd\xf2N*A\xa8\xd6\xb0\xdf\x0f\xcc\x0fX\xbb5\x8e\x1c\x87\xd1b\x85\x0b0\xb6\xc0)"\tV\x86\x1e;\x86\x7f3d\x86\xee\xd1\xb2\x0f\nF\x80 \xc2\xc0\xef\xa3\xc2\x9bQsd\xbd\xea\x81\xa6\xa3@\xe0U\x8f4\x1bG\xba\x10\xdc|\x1c)\xe8\x93\x16\xe3Ha\x9f\xb4\x1cG\xea\xa5\x13\xeb\'\xb8\x90\x94\xc3\xe4N(\x86\r<\xaa=bX}\xe4r\x02`\x89M\xfa\x9ef\xa99\x01\xd3\x9b7\x18\x9c\xf2\x8f\x11\x1e\x81UK`a|3a\x81\x98\x88i\x16\xc6\rE\xac\xdc\\\xf1\xa8\xb6\x9f\xb4\xf6\xd6\xf5\xa8\xb2\xaf/\xad\x05\xcd\x86m\x0b\xdb\xdd#z4\x996\x8d\xad\x1a\xa2]e\xbe\x11$g\x94\x9bR5\xa4h\x06:\n\xae\x93T\xb6\xdd\x81\x8d\xa5\xc1d\xd2@\x0e\xd7\x048\xb0\xacYWH\x7f`\xa9\xfd\xab\xb5m\xaac\xe8\x80C\xdc\xaf\xcf\x8ee\x95\xe7\xd7\x89\xbe7\xe04-\xa2\xb5\x18\xe2\xc2\xdf{6\x9e0\xc8\xe0n\xe3Q\xd2\x9c\x89\xeb\x0fl>\r \xe8\x01\xe6\x84\x0e|Y4\x8ce\xcd@\xa4\xabn\xcbI\x07\x96U\xc3\xa9N\xc5r\xd2NX\x7f`\x0f\xfc\xec\xcc\x19@\xc7&Nn\xa2\x04\x8d\xae\xc8\xdab\x83\x13\xac\xdbD\xb7Dz\x9bS\xb3\x16wbg\x1a\xc9\xfd\xd7\n\xe1\xa7\x12\xb9\xech\xe9\xd7h\xcf]K,\xec\xc7\xc9\r\xac\xba\xa0\xce\x8b\\\x7f\xcd\x99\xb7\x04K\xe8\x94\x8cD\xcf{.\x14~\xcf\xc0#(\x0f\x072\xdc)O\xc0\xfeC\xa2\xd8KyK\x8f\xe5\xb8=k\xc7\xf6\x18w\xdd}U9EdN\x12\x08\x9aJ\xac\xb0\x11\xca\x85!\x9b\x9f\x13\xbf\\\'\xc1v\x1a\xd9\xb9g\x18\x84,\n\xb7\xdb\xa7\x99[\x8e\xc2;\xcb\xd8\xd1E\xfd\xb3\xa6\xf0\x85\x17\xbf\xc2Bo\x1a.\xbcm\xd0\x0em\xe8\x0e\xe7\x99\xe9\xcf\xbc\xd8\xa1\x19\xc4\xb9}\xaa6|Q\xf6\xa2%&\x10-,\xc2;C\xa1\xab{\xd6 K\xad\xfe\xc1\xb4}x\xcdm\xf887\xc2E\xeb\x07\xd4\x9aW\x8c&\xa6jJU\x0b\xca\xff:\xfcKJ\x10\xc1M\xca\xf3\xf2e\xf0\xf6Y\x15\xef\x82(\xb3M\xe8/\xbd\x99\r\xff?\x10\xe5bxW\x04\xea\xee\xf5\xfa\x0f\x00\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\xd8\xe3b\xdd\xbd\x02\x00\x00\xcd\x0b\x00\x00\x12\x00\x00\x00word/footnotes.xml\xd4\x96\xdbn\x9b0\x18\x80\xef\'\xed\x1d\x10\xf7\xa9\x81\x90CQ\x93jj\xd7\xa9wU\xdb=\x80kL@\xc5\x07\xd9&$o\xbf\xdf\x1c\xb3\x92U\x84^-\x910\xd8\xfe?\xffg\xb8\xb9=\xb0\xdc\xd9S\xa53\xc17\xae\x7f\xe5\xb9\x0e\xe5D\xc4\x19\xdfm\xdc\xdf\xaf\x0f\xb3\xb5\xebh\x83y\x8cs\xc1\xe9\xc6=R\xed\xden\xbf\x7f\xbb)\xa3D\x08\xc3\x85\xa1\xda\x01\x06\xd7Q)\xc9\xc6M\x8d\x91\x11B\x9a\xa4\x94a}\xc52\xa2\x84\x16\x89\xb9"\x82!\x91$\x19\xa1\xa8\x14*F\x81\xe7{\xd5\x9dT\x82P\xad\xe1\xc0;\xcc\xf7X\xbb\r\x8e\x1c\xc6\xd1b\x85K\x10\xb6\xc0\x10\x91\x14+C\x0f=\xc3\xbf\x18\xb2@\xd7h=\x04\x05\x13@`a\xe0\x0fQ\xf3\x8bQKd\xb5\x1a\x80\xc2I \xd0j@ZL#\x9d1n9\x8d\x14\x0cI\xabi\xa4\xf9\x90\xb4\x9eF\x1a\xa4\x13\x1b&\xb8\x90\x94\xc3b"\x14\xc3\x06\x1e\xd5\x0e1\xac\xde\x0b9\x03\xb0\xc4&{\xcb\xf2\xcc\x1c\x81\xe9-[\x0c\xce\xf8\xfb\x04\x8d@\xaa#\xb0y|1a\x85\x98\x88i>\x8f[\x8a\xd8\xb8\x85\xe2Q#?\xeb\xe4\xad\xeaQ-\xdf\x0c\x9d\x04\xcd\xc7\x1d\x0b\xc7]#z0\xb96\xad\xac\x1a\xe3\xbbZ\xfc^\x90\x82Qn*\xaf!Es\xf0\xa3\xe0:\xcdd\xd7\x1d\xd8T\x1a,\xa6-d\xff\x99\x03\xf6,o\xf7\x95\xd2\x1fYj\xffjm\xf7u\x18z\xe0\x18\xf5\x9b\xd8\xb1\xbc\xd6\xfcs\xa2\xef\x8d\x88\xa6Et\x12cT\xf8\xfb\xccV\x13\x06\x19\xdc\x1f<\xc95\'\xce\xf5G6\x9f\x16\x10\x0c\x00KBG\xbe,Z\xc6\xbaa \xd2W\xb7\xe5d#\xcb\xaa\xe5\xd4Q\xb1\x9c\xacw\xac?\xb2\x07~T\xe6\x04\xa0c\x13\xa7\x17Q\x82\xd6\xaf\xc8\xcab\x83S\xac\xbbD\xb7Dz\x99R\x8b\x0ewd\'>\x92\xbb\xaf\x15\xc2/%\n\xd9\xd3\xb2\xaf\xd1\x1e\xfb\x96X\xda\xaf\x93\x0bXMA\x9d\x16\xb9\xfe\x9a2/)\x96\xd0)\x19\x89\x1ew\\(\xfc\x96\x83FP\x1e\x0ed\xb8SE\xc0^!Q\xecP\xdd\xd2C5oc\xed\xd8\x1e\xe3nO>\xab\x9c22G\t\x08M%V\xd8\x08\xe5\xc2\x94M\xd0\x99_m\x94 \x1cFv\xed\x11&\xc3\xd0\xf7\xd6\xab\xbbk\xb7\x9a\x85\x97\x96\xb1\xb3\xab\xe6gE\xe1\x1b/~\xde\xb8\x9e\x17\xceW\xdeC\xd0M\xdd\xd3\x04\x17\xb9\x19\xae<\xd9\xa9\x05\x18\xfa\xf0\xb3>\xf0I\xd9AKL\xc0\\\xd8\x84\x13C\xa1\xad{V \xcfl\x00\x82\xb0{x.\xac\xfd\xb80\xc2E\xdb\x1b\xd4\x89\xd7\x8c\xd6\xa6zI\xd5\x1b\xaakk\xffY_\x10\xc1M\xc6\x8b\xea}\xf0\xf2\xd1/\xde\x19\xb7\xccW\xcb\x1f\x01\xfc\xff\x0f\xb7\x9c5\xef3\x17\x9d<\xe8\xed\x1f\x00\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00L\'2e\xd5\x06\x00\x00\xd0 \x00\x00\x15\x00\x00\x00word/theme/theme1.xml\xecY[\x8b\x1b7\x14~/\xf4?\x88yw|\x9b\xf1e\x897\xd8c;\xdbd7Y\xb2NJ\x1ee[\x9e\xd1Z32\x92\xbc\x1b\x13\x02%\xa1\xd0B)\x14\xd2\xd2\x87\x06\xfa\x96\x87R\x1ah\xa0\xa1/\xfd1\x0b\tm\xda\xffPIc{F\xb6\xdc\\v\x17B\xd95\xacu\xf9\xce\xd1\xa7s\x8e\x8e\x8eg._\xb9\x17\x11p\x84\x18\xc74n8\xc5K\x05\x07\xa0x@\x878\x0e\x1a\xce\xed^7Ws\x00\x170\x1eBBc\xd4pf\x88;W\xb6?\xfe\xe82\xdc\x12!\x8a\x10\x90\xf21\xdf\x82\r\'\x14b\xb2\x95\xcf\xf3\x81\x1c\x86\xfc\x12\x9d\xa0X\xce\x8d(\x8b\xa0\x90]\x16\xe4\x87\x0c\x1eK\xbd\x11\xc9\x97\n\x85J>\x828v@\x0c#\xa9\xf6\xe6h\x84\x07\x08\xfc\xf3\xf9W\xaf\x9f~\xe1l/\xb4w\x88\xfc\x17\x0b\xae\x06\x06\x84\x1d(\xdd\xc8\x10\xd1\xd8\xe1\xb8\xa8\xbe\xf8\x8c\xfb\x84\x81#H\x1a\x8e\\hH\x8f{\xe8\x9ep\x00\x81\\\xc8\x89\x86S\xd0\x7fN~\xfbr~)D\xc4\x06\xd9\x8c\\W\xff\xcd\xe5\xe6\x02\xc3qI\xcb\xb1\xa0\xbf\x14t]\xcf\xad4\x97\xfa5\x80\x88u\\\xa7\xda\xa9t*K}\x1a\x00\x07\x03\xb9\xd3\x84\x8b\xa9\xb3Z\xf2\xdd96\x03J\x9a\x16\xdd\xedj\xbb\\4\xf0\x19\xfd\xe55|\xd3S\x1f\x03\xafAI\xd3]\xc3w\xbb~j\xc3\x0c(izkx\xafUo\xb5M\xfd\x1a\x944+k\xf8j\xa1\xd9v\xab\x06^\x83B\x82\xe3\xf1\x1a\xba\xe0U\xca\xfeb\xb7K\xc8\x88\x92\x1d+\xbc\xee\xb9\xddji\x0eOQ\xf9Lt%\xf2\xb1\xd8\x14k\x11<\xa4\xac+\x01\xda\xb9P\xe0\x18\x88\xd9\x04\x8d\xe0@\xe2^?\xfd\xe6\xef\'\x9f\x81\xbf~\xfd\xf1\xf5\xe3o\x1d0\x811\xe5r\xb8P*t\x0be\xf9_}\\\xdd\xd2\x1e\x85[\x08f\xa4\x93\xa1\x01_\x1bR|\x00\x1f0<\x11\r\xe7\x9a\xd4\xead /_\xbc8y\xf8\xfc\xe4\xe1o\'\x8f\x1e\x9d<\xfc\x05\xec\xe2 \x14\x16\xb9\x1d\x18\x07Y9\x93\xab\x15\xcf\xb3\xf8W?\x7f\xf9\xea\xf7?\xfeK\xbd0h}\xf7\xec\xd5\xf3g/\xbf\xff\xfa\xcf\x9f\x1e[\xe0M\x06\xfbYx\x0fG\x88\x83\x1b\xe8\x18\xdc\xa2\x91\xdc\xa0e\x01\xd4g\xef&\xd1\x0b!\xceJ4\xe3\x80\xc3\x18*\x19\x0b\xba#B\x03}c\x06\t\xb4\xe0Z\xc8\xb4\xe3\x1d&\xd3\x85\rxuzh\x10>\x08\xd9T`\x0b\xf0z\x18\x19\xc0=JI\x8b2\xeb\x9e\xae\xab\xb5\xb2V\x98\xc6\x81}q6\xcd\xe2nAxd[\xdb_\xf1rg:\x91q\x8fm*\xfd\x10\x194\xf7\x89t9\x0cP\x8c\x04Pst\x8c\x90E\xec.\xc6\x86]\xf7\xf0\x80QNG\x02\xdc\xc5\xa0\x05\xb1\xd5$=\xdc7\xa2)\x15\xda\xc1\x91\xf4\xcb\xccFP\xfa\xdb\xb0\xcd\xde\x1d\xd0\xa2\xc4\xa6\xbe\x8d\x8eL\xa4<\x1b\x90\xd8T"b\x98\xf1*\x9c\n\x18Y\x19\xc3\x88d\x91\xbbP\x846\x92\x07360\x0c\xce\x85\xf4t\x80\x08\x05\x9d!\xe2\xdc&s\x93\xcd\x0c\xba\xd7\xa1\xcc[V\xb7\xef\x91Yd"\x99\xc0c\x1br\x17R\x9aE\xb6\xe9\xd8\x0fa4\xb1r\xc6q\x98\xc5~\xc2\xc72D!\xd8\xa7\xc2J\x82\x9a\'D\xf5\xa5\x1f`\xbc\xd1\xddw02\xdc\xfd\xe6\xb3}[\xa6!{\x80\xa8\x99)\xb3\x1d\tD\xcd\xf38##\x88l\xca\x9b,2Rl\x93akt\xb4\xa6\x81\x11\xda\xbb\x08\x11x\x0c\x87\x08\x81\xdb\x9f\xd8\xf0tb\xd8<%}-\x94Ye\x07\xd9ls\r\x9a\xb1\xaa\xfa1\xe2\x08\xe8\xe2\xc6\xe2X\xcc\x8d\x90=@\x01\xdd\xc0go\xb6\x92xf0\x8e \xdb\xa4\xf9\xc6\xd8\x0c\x99N\x9f\xc9\xc3h\x8bW2\x18\x1b\xa9\x143uh\xed$n\xf2\xc8\xd8\xdfF\xad\xfb!4\xc2J\xf5\xb9=^g\xcc\xf0\xdf\xdb\x9c1)s\xf8\x1e2\xe8\x9dedb\x7fk\xdb\xf4 1\x16H\x03\xa6\x071\xd8\xb5\xa5[)b\xb8?\x15Q\xc7I\x8bM\xadr#\xf3\xd0\xa6n\xc8\xaf\x14=\x11\x8e\xdf\xaf\x02\xf2\xce\xaf\x02\x92u\xc6\xcb\x1f\x9eX\xb0gS\xf5\xd8\x81\xa7\xa9w6\xa5\x94\xd5*g\x13n\xb5\xb6\xf1)\x1b\xe2\x0f\xbf\xb4i\xc3i\xbc\x8f\xe4mb\x81^T6\x17\x95\xcd\xff\xbe\xb2\xd9t\x9e/\xea\x99\x8bz\xe6\xa2\x9e\xb1\x8b\x9cC=\x93\x960\xfaA\xd0\xe2q\x8f\xd6\x12m|\xf63\xc2\x84\x1c\x88\x19A\xbb\\\x17?\\\x9e\xfdaW\x0e\xea\x8e\x16Z>j\x9a\x84\xb29_\xce\xc0\x05\x0c\xea6`T|\x8aEx\x10\xc2\x89\\\xa6\xa8W\x08\xf8\\u\xc0\xc1\x84rY8\xe9a\xabn5A\xa6\xd1\x1e\x1d&\xa3\xc5\xe2\xe2\xe9\xa6\x14\x80"\x1d\x97\x85\xd7b\\\x16k"\x19\xadT\xd3\xc7xK\xf5\xba\x17\xe8\xc7\xad\x0b\x02J\xf6]Hd\x163I\x94-$\xaa\x8b\xc17\x90\xd0;;\x13\x16u\x0b\x8b\x9aR\xbf\x91\x85\xfe\x9a{E^N\x00\xaa\'\xe3\x9e\x9b0\x92\xe1&Cz\xa8\xfc\x94\xc8/\xbc{\xe6\x9e\xdedLs\xdb%\xcb\xf6\xea\x8a\xeb\xd9x\xda \x91\t7\x93D&\x0cCyy\xac\x0e\x9f\xb1\xaf\xeb\xa9K\rz\xca\x14\xeb4\xaa\xb5\xf3\xf0\xb5J"+\xb9\x81\xc4f\x0f\x1c\xcb3W\xf6\xa4\x9a\x01\x9c4\x9c\x91\xfc\xe1$\x9b\xd1D\xea\xe3*SA\x12\xc4\rg \xe6\x86~\x9f\xcc2a\\\xb4!\x0f\x13\x98\x9eJ\xf6\x1fa\x81\x18 8\x92\xb1\x9eu\x03\x89Sn\xc5RU\xed\xf1\x03%W/|x\x96\xd3_Y\'\xa3\xd1\x08\r\xc4\x86\x91\xb4+\xe7\x12%\xd6\xd9S\x82U\x87N%\xe9\x83px\x0c\xfad\xcanAi(\xafZT\x06\x1cb.\x96\xd6\x1cb\x96\t\xee\xd4\x8a+\xe9j~\x14\x8d\xb7.\xe9\x11\x85d\x12\xc2\xf9\x8d\x92M\xe6\t\\\xb7\x97t2\xfb\xd0LWwe\xf6\xe7\x9b\xe9\x07\xcaI\xa7\xbeu\xdf,\xa4&2Is\xc3\x05\xa2nM{\xfe8\xbfK>\xc3*\xcd\xfb\x06\xab$u\xaf\xe6\xba\xfa"\xd7m\xba%N\x7f!d\xa8\xa5\x8b\x19\xd4\x14c\x0b\xb5t\xd4\xa4v\x86\x05Af\xb9ehn\xba#\xce\xfa6X\x8dZuA,\xeaJ\xdd[{\xbdM\xfb\x872\xf2\xdb\xb2Z\x9d\x12\xc15U\xf9\xab\x85A\x7f\xf1b2\xc9\x04zt\x91]\xee\t0e\xb8\xe1\xdc/xM\xd7/y~\xaeP\xf3:9\xb7\xec\x16r5\xafY\xce5=\xaf\\\xecx\xc5B\xbbUz \x8d"\xc2\xa8\xe8%kw\xe5\x8f}2\x9b\xbf\xbe\xd7\xe3k\xaf\xf0\xa3E\xa9}i@\xa3<\xd5up^\x0b\xebW\xf8\xc5\x92\xed\x15~O\xcd;\x00K\xcb\xdc\xaf\x94\xba\xf5r\xbdU\xc9\xd5\xcb\xcdn\xcem\xb7j\xb9\xba_i\xe5\xda\x15\xbf\xda\xee\xb6}\xafV\xef>p\xc0\x91\x06\xbb\xcd\xb2\xefV:\xb5\\\xa5\xe8\xfb9\xb7RP\xf4k\xf5\\\xd5-\x95\x9an\xb5Y\xeb\xb8\xcd\x07s[\xcb\x9d/\xbe\x17\xe6\xd5\xbc\xb6\xff\x05\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x02d:\x01\xc8\x04\x00\x00O\x0e\x00\x00\x11\x00\x00\x00word/settings.xml\xb4W\xdfo\xdb6\x10~\x1f\xb0\xff\xc1\xd0\xf3\x1cK\xb2~8B\x9c\xc2\x8e\xad5]\xbc\x0eU\x8a=S\x12m\x13\x11E\x81\xa4\xec\xb8\xc5\xfe\xf7\x1d)\xd1\xb2\x13\xb5H\xb2\xe5%\xa6\xee\xbb\xfb\xeex\xbc;2W\x1f\x1ei1\xd8a.\x08+\xa7\x96sa[\x03\\f,\'\xe5fj}\xbd\x8f\x87\x13k $*sT\xb0\x12O\xad\x03\x16\xd6\x87\xeb_\x7f\xb9\xdaG\x02K\tjb\x00\x14\xa5\x88h6\xb5\xb6RV\xd1h$\xb2-\xa6H\\\xb0\n\x97\x00\xae\x19\xa7H\xc2\'\xdf\x8c(\xe2\x0fu5\xcc\x18\xad\x90$))\x88<\x8c\\\xdb\x0e\xac\x96\x86M\xad\x9a\x97QK1\xa4$\xe3L\xb0\xb5T&\x11[\xafI\x86\xdb\x1fc\xc1_\xe2\xb71Y\xb0\xac\xa6\xb8\x94\xda\xe3\x88\xe3\x02b`\xa5\xd8\x92J\x186\xfaV6\x00\xb7\x86d\xf7\xb3M\xecha\xf4\xf6\x8e\xfd\x82\xed\xee\x19\xcf\x8f\x16/\tO\x19T\x9ceX\x088 Z\x98\x00I\xd99\xf6\x9e\x11\x1d}_\x80\xefv\x8b\x9a\n\xcc\x1d[\xafN#\xf7_G\xe0>#\x082\xfc\xf8:\x8eI\xcb1\x02\xcbS\x1e\x92\xbf\x8e\'8\xf2\x90.\xb1N\xf0\xb6`N\x08D.\xf3\xed\xabX\\\x93\xd7\x91\xb2E\x12m\x918V\x91b\xc4\xaf\x0b\xca?\xd2\x1dh\x97#Q\xbc\xa4j\x1a\xe8\x8e\xa4\x1c\xf1\xa6\'\xdb\x92\xa1Yt\xbb)\x19Gi\x01\xe1@\xe9\x0c\xe0\xf4\x07::\xf5\x17\x92\xa8~\xf4\x12?j\xb9\xca\x83u\r3\xe2\x1bct\xb0\x8f*\xcc3h\x94\xa9\xe5:\x815R@\na\xc2\xd4Y\xb0?\x99Lj\xceY]\xe6\x1f1\x02\xd9\x0f\xe1\x981\xd9\xc2P\xdcl\x9dH$!\x80HT\xb8(\xf4\xbc\xca\n\x8c \xde}\xb4\xe1\x88\xc2\xa41\x12m\x93\xe35\xaa\x0by\x8f\xd2D\xb2\n\x94v\x08\xd22\xb1\xed\x06\xce\xb6\x88\xa3\x0c\x1c$\x15\xca\x80\xed\x86\x95\x92\xb3\xc2\xe8\xe5*\x92\x1b\x98Z\x1c\x9a\xaa\xb1\xd8\xe6<\xd9\xa2\n/\x1abq}\xc5"\xa1\x04\xad\'1\xd8E\xf8\x116\x8ds"a\x8aV$\xa7\x08*\xde\xb5}\xeds\xd4G\xb1\x8f\xd6\xb0\xcd\x12v\xfa\x17?\xfd\x828T\x95\x0f\x9d\xc6\xf7\x13\xb1\xe1;\xb7\xc5e\xfe\xec\xe3\t\xcf\xb9\xd4\xd0\x9c\x196\xa3Z\xadj\x81\xe3\xe5\x1d:\xb0Z6)\xd3H\xd2\\\x03@Q"\n\xf5q6\xdaW,\xc7\xea@jN^^\xc8\xca@\'\xdd\xf1\xdb\xb3\xe9u\xc4\xe0\xda\xe2$\xc7\xf7\xaa.\x13y(p\x0cg\x96\x90oxV\xe6\x9fj!\t0\xea\x01\xff\x1f"\xf8Y\x00\xb8T\x9e?C\'\xdd\x1f*\x1cc$k\xa8\x8ewr\xa6\x0b0.H\xb5"\xd0\x0e\xfc\xb6\xcc\xa1\xa1\xde\xcd\x19Y\xaf1\x07\x07\x04Zl\x05\x95I8\xdb\xeb<7=\xfa^~\xa1\xc2\xfe\x06e\x18d\xe3{\xe8\xc6\x879\x93\x92\xd1\x8f\x87j\x0b\xb9\xfe\x1fNrtZ\xce\xf0\xe6\xc9u\xc7\xa9\xc5\x17\xe8\x1c\xa3j\xdbn\xe8\x07^;\x18\x14\xda!\x10\x99\xb3\xf4z\x11\xd7]\\\xc6\xbdH\xe0\x84s\xb7\x17\x99\xfb\xcbq\xd8\x87\xb8\xbe;\t\xe6\xbd\xc8\x0fc\xf3\xc6\xa1\x1d\xf7\xfa\xf1\x16A\x1c\x8e\xfb\x10\x1f\xae\xf6x\xd9\x87\x04\xb0\xd1\xb87\x82pl\xcff\xbd\xc8e\x08\xfb\xe9\x8d`v9\x9e\x84\x93>d>v\xedeol\x8b\x89g\x8f\xb5\xcd\xe8xZ4R\xef,5\x99\x9a\x95j\xf9\x01m,n\x10M9A\x83\x95z\x89\x8d\x94F\xca\x1f\xe6\xa44x\x8a\xe1\xba\xc3\xa7HR\xa7\x06\x1c\x0e\x1b@PT\x141\x14\x9f\x01t\xaai\x94\x13Q\xc1\x98\xd6\xebb\x85\xf8\xa6\xe3m5x\xaf\x14.\x83OG.u\tb\xfe;\\gU\x83\xee9\xaa\x9aV6*\x8e\xd7\x1c.\x8dH)\xef\x085rQ\xa7\x89\xb1*\xe1\x82>\x81\xe0n\xfc\xbc\xe3:O]z\xf6\x91\x84\xd6\xd0#\xf1\x0e\xe9\x16\xd3\xba\xb8\x1c~MTS`$\xe4L\x104\xb5\x1e\xd8\xf0\x8f/mW\x16<Q\x1d\x85W\xa8\xaa\x9a\xc6L7\xce\xd4*\xc8f+\x1de&\xe1+\x877\xbc\xfeH7n\x8b\xb9\x1as\x1bL\x7f\xa0Lm\x16\xb4\xdbE\'s\x8d\xecDold\xe3N\xe6\x19\x99\xd7\xc9|#\xf3;Y`d\x81\x92ma\x14sx\x0e<\xc0\x8c0K%_\xb3\xa2`{\x9c\x7f\xec\xf0g\xa2&\t\xfa\x0e\x7f\xeb\xa5\xdej\x17\xfa\x96<\xd3U\x98R\xae\xce\x19\xd4\xa3\x0f\xcc\xf5\xe9\x9d\x19\xeb\xaa\x7f\x12\x8bz\xc5d\x04*49\xd0\xb4{\x9c\\4\x81\x17D\xc0D\xad\xe0\x1d#\x197\xd8o\x1as\xbc(g\xd9\xadz\xa8y\x8d<\x9c9\xeeb<k\x06\x96\xe3\x1fa\xbf\x81\xbf\xcfB/t\x82\xf0f\x18\x86\xf1d\xe8yq<\xbc\\L&\xc3\xe5\xecf9w\x1d\'\xf6\x03\xf7\x9f\xb67\xcd\x7f\x82\xd7\xff\x02\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\xeb\xff\xee\xb8\t\x02\x00\x00p\x05\x00\x00\x12\x00\x00\x00word/fontTable.xml\x9c\x93\xcd\x8e\x9b0\x10\xc7\xef\x95\xfa\x0e\xc8\xf7\r\x86\xcd\x07\x89\x96\xac\xb4\x1f\x91z\xe9\xa1\xda>\x80cL\xb0\x8am\xe4qBr\xeb+Tj\x8f\x95z\xeb\x03\xf4\xadv\xfb\x10\x1d\x03IQ\xd3\x8f\xa5H\x80\xf9\xcf\xcc\xcf3\x7f\x8b\xab\xeb\xbd*\x83\x9d\xb0 \x8dNI4\xa2$\x10\x9a\x9bL\xeaMJ\xde>\xac.\x12\x12\x80c:c\xa5\xd1"%\x07\x01\xe4z\xf9\xf2\xc5U\xbd\xc8\x8dv\x10`\xbd\x86\x85\xe2))\x9c\xab\x16a\x08\xbc\x10\x8a\xc1\xc8TBc07V1\x87\x9fv\x13*f\xdfm\xab\x0bnT\xc5\x9c\\\xcbR\xbaC\x18S:%\x1d\xc6>\x87b\xf2\\rqg\xf8V\t\xed\x9a\xfa\xd0\x8a\x12\x89FC!+8\xd2\xea\xe7\xd0jc\xb3\xca\x1a.\x00pfU\xb6<\xc5\xa4>a\xa2\xf1\x19HIn\r\x98\xdc\x8dp\x98\xae\xa3\x06\x85\xe5\x11mV\xaa\xfc\t\x98\x0c\x03\xc4g\x80)\x17\xfba\x8c\xa4c\x84X\xd9\xe7\xc8l\x18gz\xe2\xc8\xac\xc7\xf9\xbffz\x00\xc8\\V\x0c\xa2\xc4G_C_\xcb\x1c+\x18\x14}\xa2\x18\xd6\xd4\xe4\x84;(\xef\x91\xe2\x8bW\x1bm,[\x97H\xc2S\x0f\xf0\xe0\x82\x06\xec\x9f8\xbf\x7f5K\xb1ot?\x02Yv\xbfBP/4SX\xf9\xf4\xf5\xc3\xf7\xcf\xef\x83\xc7o_\x9e>~j\xc2\x15\xd3\x06D\x84\x19;V\xa6\x04\'\xb9\xa1\x13z\x89o\x7f\xf9\xe7\x98\x84>\x91\x17\xcc\x82\xf0\xa8&1\x89Z9gJ\x96\x87\xa3\n\xb5\x04h\x03\x95t\xbc8\xea;f\xa5\xef\xbd\r\x81\xdc``\x0bk\x9a\x92y\xbb\xcf\x8a\xb4J\x94\x92x~7\x9b\xdd\xaen:%\xc6\xa6\x9a+\x8a;\xe5\xf2\xa8P\xea\x15\xdep\xf0#\xf1I\x9d\x12\xf5rp\xcf\xb0\xf5\xe1\xcc\x8f\x07\xa9\x04\x04\xafE\x1d\xbc1\x8a\xe9?8\x12\xd3):2\xa1c\xbcc\\\xfd\xde\x91v\xa7_\x1d\xb1\rw\x88#\xf7\xde\x8f\xfbU\xcf\x91[Tf\xc9\xe4\xcc\x11:\xff\x87#\xe8G\xcb\xf9\x8b#\xdd\x02\x96?\x00\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00E\x9cg\x97E\x01\x00\x00{\x02\x00\x00\x11\x00\x08\x01docProps/core.xml \xa2\x04\x01(\xa0\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9c\x92]k\xc20\x14\x86\xef\x07\xfb\x0f%\xf7m\xd2\x96\r)md\x1f\x88\x17\x13\x06*\x1b\xbb\x0b\xc9Q\xc3\x9a4$\x99\xd5\x7f\xbf\xb4jU\xe6\xd5.\xd3\xf7\xc9\xc3{NZ\x8ew\xaa\x8e\xb6`\x9dlt\x85\xd2\x84\xa0\x084o\x84\xd4\xeb\n-\x17\x93x\x84"\xe7\x99\x16\xacn4Th\x0f\x0e\x8d\xe9\xfd]\xc9M\xc1\x1b\x0b\xef\xb61`\xbd\x04\x17\x05\x93v\x057\x15\xdaxo\n\x8c\x1d\xdf\x80b.\t\x84\x0e\xe1\xaa\xb1\x8a\xf9p\xb4kl\x18\xfffk\xc0\x19!\x8fX\x81g\x82y\x86;al\x06#:*\x05\x1f\x94\xe6\xc7\xd6\xbd@p\x0c5(\xd0\xde\xe14I\xf1\x99\xf5`\x95\xbby\xa1O.H%\xfd\xde\xc0M\xf4\x14\x0e\xf4\xce\xc9\x01l\xdb6i\xf3\x1e\r\xfdS\xfc9{\x9b\xf7\xa3\xc6Rw\xbb\xe2\x80h)x\xc1-0\xdfX\xfa$\x94\xd4%\xbe\xf8\xd2m\xaff\xce\xcf\xc2\xa2W\x12\xc4\xf3\x9e.ux\x81h:\x9d\x97\xf8o\xd8\xf1\x16\xb6\xb2{%\x9a\xf7\xc4p,\x8f#\x1f\xe4 \xa2P\xb58\x0cvJ>\xf2\x97\xd7\xc5\x04\xd1\x8cdYLFq:Z\x90\x87"\xcf\nB\xbe\xba^W\xf7\xcfBu,\xf0o\xe3I@\xfb\xc6\xd7\xbf\x0b\xfd\x05\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00L\xec\x16\x1dw\x01\x00\x00\xca\x02\x00\x00\x10\x00\x08\x01docProps/app.xml \xa2\x04\x01(\xa0\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9cR\xcbN\xc30\x10\xbc#\xf1\x0fQ\xee\xadS\n\x05\xa1\xad+\xd4\nq\xe0Q\xa9\x01\xce\x96\xbdI,\x1c\xdb\xb2\r\xa2\x7f\xcf\x86\xb4!\x88\x1b9\xed\xccz\xc7\xb3\x13\xc3\xea\xb35\xd9\x07\x86\xa8\x9d]\xe6\xb3i\x91gh\xa5S\xda\xd6\xcb\xfc\xb9\xbc\x9d\\\xe5YL\xc2*a\x9c\xc5e\xbe\xc7\x98\xaf\xf8\xe9\tl\x83\xf3\x18\x92\xc6\x98\x91\x84\x8d\xcb\xbcI\xc9_3\x16e\x83\xad\x88Sj[\xeaT.\xb4"\x11\x0c5sU\xa5%n\x9c|o\xd1&vV\x14\x0b\x86\x9f\t\xadB5\xf1\x83`\xde+^\x7f\xa4\xff\x8a*\';\x7f\xf1\xa5\xdc{\xd2\xe3Pb\xeb\x8dH\xc8\x1f\xbbI3U.\xb5\xc0\x06\x16J\x97\x84)u\x8b\xbc z\x00\xb0\x155F>\x03\xd6\x17\xf0\xea\x82\x8a|q\t\xac\xaf`\xdd\x88 d\xa2\x00\xf9\xfc\xea\x1c\xd8\x08\xc3\x8d\xf7FK\x91(Z\xfe\xa0ep\xd1U){\xfa\xf6\x9bu\xf3\xc0\xc6G\x80v\xd8\xa1|\x0f:\xed;\x1bc\x08\xf7\xda\xd2\xfds`}A\xc6\x82\xa8\x83\xf0\xcd\xc1\xdd\x80`\'\x85\xc15m\xcf+a"\x02\xfb!`\xedZ/,\xc9\xb1\xa1"\xbd\xb7\xf8\xecK\xb7\xe9\x828\x8c\xfc&GK\xbe\xea\xd4\xec\xbc\x90d\xe1\xfc\xa2\x18\xaf;\xea\xc0\x8eXT\xe4\x7f\xb00\x10pG\x7f$\x98N\x9ffm\x8d\xeax\xe6o\xa3\x0b\xf0\xa5\x7f\x9a|\xb6\x98\x16\xf4}\'v\xe4h\xef\xe1\xcd\xf0/\x00\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00u\x90Np\x81\x0c\x00\x00\x8aw\x00\x00\x0f\x00\x00\x00word/styles.xml\xec\x9d\xcdv\xdb\xba\x11\xc7\xf7=\xa7\xef\xc0\xa3U\xbbp$\xf93\xc9\xb9\xce=\x8ec\xd7>7N|#\xa7YC$d\xe1\x9a$T\x92\xf2GW\xddw\xdbWhO\x17]ty\x9f\xa9y\x89\x02 )A\x1e\x82\xe2\x80S\xaf\xbaI,\x92\xf3#\x80\xff\xcc\x00\xc3\x0f\xe9\x87\x1f\x1f\x938\xb8\xe7Y.dz<\x18\xbf\x1a\r\x02\x9e\x862\x12\xe9\xed\xf1\xe0\xeb\xcd\xf9\xce\xebA\x90\x17,\x8dX,S~<x\xe2\xf9\xe0\xc7w\xbf\xfd\xcd\x0f\x0fo\xf3\xe2)\xe6y\xa0\x00i\xfe6\t\x8f\x07\xf3\xa2X\xbc\x1d\x0e\xf3p\xce\x13\x96\xbf\x92\x0b\x9e\xaa\x9d3\x99%\xacP\x1f\xb3\xdba\xc2\xb2\xbb\xe5b\'\x94\xc9\x82\x15b*bQ<\rwG\xa3\xc3A\x85\xc9\xbaP\xe4l&B\xfeA\x86\xcb\x84\xa7\x85\xb1\x1ff<VD\x99\xe6s\xb1\xc8k\xdaC\x17\xda\x83\xcc\xa2E&C\x9e\xe7\xaa\xd3I\\\xf2\x12&\xd2\x15f\xbc\x0f@\x89\x083\x99\xcbY\xf1Ju\xa6j\x91A)\xf3\xf1\xc8\xfc\x95\xc4k\xc0\x01\x0e\xb0\x0b\x00\x87!\x7f\xc41^W\x8c\xa1\xb2\xb49"\xc2q\x0eW\x1c\x11Y\x1c\xbf\xc6X\x80<*\xa29\x8a\xb2[\x8f\xebP\xdb\xb2\x82\xcdY>\xb7\x89\x1c\xd7\xa8\x83\x15\xee)\xd1c\x94\x84o/oS\x99\xb1i\xacHJ\xf5@\t\x17\x18\xb0\xfeW\xf5_\xffg\xfe\xe4\x8ff\xbb\xee\xc2\xe0\x9d\x8a\x85H\x86\x1f\xf8\x8c-\xe3"\xd7\x1f\xb3\xeb\xac\xfaX}2\xff\x9d\xcb\xb4\xc8\x83\x87\xb7,\x0f\x85\xb8Q\rTgI\x84:\xe1\xc5I\x9a\x8b\x81\xda\xc3Y^\x9c\xe4\x82\xd9;\xcf\xaamz\xff\\\x1f\xd8h\x19\xe6\x85\xb5\xf9\xbd\x88\xc4`\xa8Oz\xc7\xb3T\xed\xbeg\xf1\xf1`\xb7\xdc\x94\xff\xf9T\xb7\xa2\xdcTm\x8bYz[o\xe3\xe9\xce\xd7\x89\xdd\x9a\xe3\xc1\x9d\xdc\xf9\xe9\x8b\xde4U\xe0\xe3\x01\xcbv&\'\xdapXu\xae\xfc\xdf\xea\xf2\xe2\xf9\'s\xe2\x05\x0b\x859\x0f\x9b\x15\\\x85\xfa\xf8p\xa4\xa1\xb1\xd0\x99e\xf7\xe0M\xfd\xe1\xcbR\x0b\xc0\x96\x85,[\xf7KX\xb7m*\x8byub\x03-\xff_\x9dj\x08\x94PYA\xe5\x88I\x99\xaa\xd4^>\xfb(\xc3;\x1eM\n\xb5\xe3x`\xce\xaf6~\xbd\xbc\xce\x84\xccT::\x1e\xbc1\xedP\x1b\'<\x11\x17"\x8axj\x1d\x98\xceE\xc4\xbf\xcdy\xfa5\xe7\xd1z\xfb\xcf\xe7&\xa5T\x1bB\xb9L\xd5\xdf{G\x87\xc6;\xe2<:{\x0c\xf9B\'(\xb57eZ\xa8O\xda \xd6G/\xc5\xfa\xe4\xc6\xfcO5l\\\xa9\xd3d?\xe7Lg\xe9`\xfc\x1ca\x9a\x8fB\xecj\x8b\xdc\xeam3s\xf9\xac\xef\xe6(\xd4\x89\xf6^\xeaD\xfb/u\xa2\x83\x97:\xd1\xe1K\x9d\xe8\xe8\xa5N\xf4\xfa\xa5Nd0\xff\xcb\x13\x894R\x13\x829\x1e\x9e\x06P\xb7q\x1c\xd1\x88\xe68\x82\r\xcdq\xc4\x12\x9a\xe3\x08\x154\xc7\x11\th\x8e\xc3\xd1\xd1\x1c\x87\x1f\xa39\x0e7Ep\n\x19\xba\xbc\xd0r\xf6=\x87\xb7\xb7s\xb7\xcf\x11~\xdc\xedS\x82\x1fw\xfb\x0c\xe0\xc7\xdd\x9e\xf0\xfd\xb8\xdb\xf3\xbb\x1fw{:\xf7\xe3n\xcf\xde~\xdc\xed\xc9\x1a\xcf-\x97Z\xc1\xa5\n\xb3\xb4\xe8\x1de3)\x8bT\x16<(\xf8c\x7f\x1aK\x15\xcb\x94\xae4<=\xe9\xf1\x8c\xa4\x93\x04\x982\xb3U\x13qoZ\xc8\xcc\xe7\xed\x1eb\x82\xd4\x7f>/t\x05\x18\xc8Y0\x13\xb7\xcb\x8c\xe7\xbd\x1b\xce\xd3{\x1e\xcb\x05\x0fX\x14)\x1e!0\xe3\xc52s\x8c\x88\x8fOg|\xc63\x9e\x86\x9c\xd2\xb1\xe9\xa0\xba:\x0c\xd2e2%\xf0\xcd\x05\xbb%c\xf14"\x1e\xbe\x9aH\x92\x14V\x0e\xadj\xea\xb9\x0e\x12A\xe0\xd4\t\x0b3\xd9\xbfi\x92\x91\xe5\x87\x8f"\xef?V\x1a\x12\xbc_\xc61\'b}\xa2q1\xc3\xea_\x1b\x18L\xff\xd2\xc0`\xfaW\x06\x06\xd3\xbf0\xb04\xa3\x1a\xa2\x8aF4R\x15\x8dh\xc0*\x1a\xd1\xb8\x95\xfeI5n\x15\x8dh\xdc*\x1a\xd1\xb8U\xb4\xfe\xe3v#\x8a\xd8\xa4x{\xd51\xee~\xed\xee4\x96\xfafC\xefvL\xc4m\xca\xd4\x02\xa0\xfftS]3\r\xaeY\xc6n3\xb6\x98\x07\xfaju3\xd6\xee3\xf6<\xefe\xf4\x14\xdcP\xcci+\x12\xd5\xba\xde\xb8\xc8\xa9\xea\xb5H\x97\xfd\x07t\x83F\x15\\+\x1eQx\xadxD\x01\xb6\xe2\xf5\x0f\xb1+\xb5L\xd6\x0b\xb4\x0b\x9azf\xb2\x9c\x16\x8dAkH\x9d\x82v\xc2\xe2e\xb9\xa0\xed\x1fm\xac\xe8\xefa\xeb\x008\x17YN\x16\x06\xcdX\x02\x0f\xfe\xa4\x97\xb3ZN\x8a\xcc\xb7ne\xff\x86\xadY\xfd\xc3\xeayV"m^\x85$he,\xc3;\x9a4|\xf1\xb4\xe0\x99*\xcb\xeez\x93\xcee\x1c\xcb\x07\x1e\xd1\x11\'E&K_\xb3C~\xd7H\xd2)\xe4\xcf\x92\xc5\x9c\xe5\xc2\xd4J\x1b\x88\xeeS}\xfd\x98Bp\xc5\x16\xbd;t\x1d3\x91\xd2\xe8v\xb6\x930\x11\x07t+\x88\x8b\x9b\xab\x8f\xc1\x8d\\\xe82S\x0f\x0c\r\xf0\xbd,\n\x99\x901\xab+\x81\xbf\xfb\xc6\xa7\xbf\xa7i\xe0\x89*\x82\xd3\'\xa2\xde\x9e\x10]\x1e2\xb0SA0\xc9\x94$\x19\x11\x91\xd42S\xa4\x82d\x0e5\xbc\x9f\xf8\xd3T\xb2,\xa2\xa1]g\xbc|2\xa8\xe0D\xc4\tK\x16\xe5\xa2\x83 \xb6T^|P\xf9\x87`5dx\x7fd\x99\xd0\xd7\x85\xa8\x82\xea\x86\x04f]6\xcc\x97\xd3_x\xd8?\xd5}\x92\x01\xc9\x95\xa1\xcf\xcb\xc2\\\x7f4K]cM\x87\xeb\xbfL\xd8\xc0\xf5_"\x185\xd5\xf4\xa0\xfd\x97\xa0\xb3\x1b\xb8\xfe\x9d\xdd\xc0Qu\xf64fy.\x9c\xb7P\xbdyT\xdd\xady\xd4\xfd\xed_\xfcU<\x19\xcbl\xb6\x8c\xe9\x06\xb0\x06\x92\x8d`\r$\x1bB\x19/\x934\xa7\xec\xb1\xe1\x11v\xd8\xf0\xa8\xfbK\xe82\x86GpI\xce\xf0\xfe\x90\x89\x88L\x0c\x03\xa3R\xc2\xc0\xa8d00*\r\x0c\x8cT\x80\xfeO\xe8X\xb0\xfe\x8f\xe9X\xb0\xfe\xcf\xea\x940\xa2%\x80\x05\xa3\xf23\xd2\xe9\x9f\xe8.\x8f\x05\xa3\xf23\x03\xa3\xf23\x03\xa3\xf23\x03\xa3\xf2\xb3\xbd\x0f\x01\x9f\xcd\xd4"\x98n\x8a\xb1\x90T>g!\xe9&\x9a\xb4\xe0\xc9Bf,{"B\x9e\xc5\xfc\x96\x11\\ -i\xd7\x99\x9c\xe9WFdZ>\xc4M\x80\xd4\xd7\xa8c\xc2\xc5v\x89\xa3\x12\xf9\x1b\x9f\x925M\xb3(\xdbEpE\x94\xc5\xb1\x94D\xd7\xd6\xd6\x13\x8e\xb1\xdc|vm\x9b\x99y\xbd\xa3w\x13\xaec\x16\xf2\xb9\x8c#\x9e9\xfa\xe4\xb6U\xf5\xf2\xa4|U\xe3y\xf3M3:]\xf6\xfc(n\xe7E0\x99\xaf\xae\xf6\xdb\x98\xc3\xd1V\xcb\xba`\xdf0\xdb~\xc2\xa61?\xac\xdfqi2\xbb\xe2\x91X&uC\xe1\xcb\x14\x87{\xdd\x8d\x8dGo\x18\xefo7^\xaf$6,\x0f:Z\xc2s\x1en\xb7\\\xaf\x927,\x8f:Z\xc2s\xbe\xeehi\xe2t\xc3\xb2-\x1e>\xb0\xec\xae\xd1\x11\x8e\xda\xfcgU\xe39\x9c\xef\xa8\xcd\x8bV\xc6\x8d\xa7ms\xa4\x95e\x93\x0b\x1e\xb5y\xd1F\xa8\x04\'a\xa8\xef\x16@u\xba\xc5\x8c\xdb\xbe[\xf0\xb8\xed1Q\xe4\xa6`\xc2\xc9M\xe9\x1cWnD[\x80}\xe1\xf7B\xcf\xec\x98\xa4i\xce\xb7zz\x02\xe4}\xb3\x88\xee\x949\x7f^\xca\xf2\xba\xfd\xc6\r\xa7\xee/u]\xaa\x85S\x9a\xf3\xa0\x91\xb3\xd7\xfd\xc6\xd5F\x96q\x8fc\xe7t\xe3Ft\xce;nD\xe7\x04\xe4Ft\xcaDNsTJrS:\xe7&7\xa2s\x92r#\xd0\xd9\n\xce\x08\xb8l\x05\xedq\xd9\n\xda\xfbd+H\xf1\xc9V=V\x01nD\xe7\xe5\x80\x1b\x81\x0eT\x88@\x07j\x8f\x95\x82\x1b\x81\nT`\xee\x15\xa8\x90\x82\x0eT\x88@\x07*D\xa0\x03\x15.\xc0p\x81\n\xedq\x81\n\xed}\x02\x15R|\x02\x15R\xd0\x81\n\x11\xe8@\x85\x08t\xa0B\x04:P!\x02\x1d\xa8\x9ek{\xa7\xb9W\xa0B\n:P!\x02\x1d\xa8\x10\x81\x0eT\xb3^\xec\x11\xa8\xd0\x1e\x17\xa8\xd0\xde\'P!\xc5\'P!\x05\x1d\xa8\x10\x81\x0eT\x88@\x07*D\xa0\x03\x15"\xd0\x81\n\x11\xa8@\x05\xe6^\x81\n)\xe8@\x85\x08t\xa0B\x04:P\xcbW\r\xfd\x03\x15\xda\xe3\x02\x15\xda\xfb\x04*\xa4\xf8\x04*\xa4\xa0\x03\x15"\xd0\x81\n\x11\xe8@\x85\x08t\xa0B\x04:P!\x02\x15\xa8\xc0\xdc+P!\x05\x1d\xa8\x10\x81\x0eT\x88@\x07\xaa\xb9Y\xd8#P\xa1=.P\xa1\xbdO\xa0B\x8aO\xa0B\n:P!\x02\x1d\xa8\x10\x81\x0eT\x88@\x07*D\xa0\x03\x15"P\x81\n\xcc\xbd\x02\x15R\xd0\x81\n\x11\xe8@\x85\x886\xff\xacnQ\xba\x1e\xb3\x1f\xe3\xafz:\x9f\xd8\xef~\xeb\xaaj\xd4\x17\xfbUn\x1b\xb5\xd7\x1dU\xb7\xca\xcd\xea\xfe.\xc2{)\xef\x82\xc6\x17\x0f\xf7L\xbd\xd1\r"\xa6\xb1\x90\xe6\x12\xb5\xe3\xb6\xba\xcd5\x8fD\xa0n|~>m\x7f\xc3\xc7\xa6\xf7\xfc\xd2\xa5\xea]\x08s\xcf\x14\xc0\xf7\xbbZ\x82k*\xfbm.o[\x82"o\xbf\xcd\xd3mK\xb0\xea\xdco\xcb\xbe\xb6%\x98\x06\xf7\xdb\x92\xae\x89\xcb\xfa\xa1\x145\x1d\x01\xe3\xb64c\x19\x8f\x1d\xe6m\xd9\xda2\x87C\xdc\x96\xa3-C8\xc2m\x99\xd92\x84\x03\xdc\x96\x8f-\xc3\x83@\'\xe7\xe7\xd6\x07\x1d\xc7\xe9p\xf5|) \xb4\xb9\xa3E8r\x13\xda\xdc\x12jU\xa7c\x18\x18]Es\x13\xba\xaa\xe7&t\x95\xd1M@\xe9\xe9\xc4\xe0\x85u\xa3\xd0\n\xbbQ~R\xc30\xc3J\xed\x1f\xa8n\x02VjH\xf0\x92\x1a`\xfc\xa5\x86(o\xa9!\xcaOj\x98\x18\xb1RC\x02Vj\xff\xe4\xec&xI\r0\xfeRC\x94\xb7\xd4\x10\xe5\'5\x9c\xca\xb0RC\x02VjH\xc0J\xddsBvb\xfc\xa5\x86(o\xa9!\xcaOj\xb8\xb8\xc3J\r\tX\xa9!\x01+5$xI\r0\xfeRC\x94\xb7\xd4\x10\xe5\'5\xa8\x92\xd1RC\x02VjH\xc0J\r\t^R\x03\x8c\xbf\xd4\x10\xe5-5D\xb5Im\xae\xa2lH\x8dR\xd82\xc7-\xc2,C\xdc\x84l\x19\xe2\x92\xb3e\xe8Q-Y\xd6\x9e\xd5\x92E\xf0\xac\x96\xa0V\xb5\xe6\xb8j\xc9\x16\xcdM\xe8\xaa\x9e\x9b\xd0UF7\x01\xa5\xa7\x13\x83\x17\xd6\x8dB+\xecF\xf9I\x8d\xab\x96\x9a\xa4\xf6\x0fT7\x01+5\xaeZrJ\x8d\xab\x96Z\xa5\xc6UK\xadR\xe3\xaa%\xb7\xd4\xb8j\xa9Ij\\\xb5\xd4$\xb5\x7frv\x13\xbc\xa4\xc6UK\xadR\xe3\xaa\xa5V\xa9q\xd5\x92[j\\\xb5\xd4$5\xaeZj\x92\x1aW-5I\xddsBvb\xfc\xa5\xc6UK\xadR\xe3\xaa%\xb7\xd4\xb8j\xa9Ij\\\xb5\xd4$5\xaeZj\x92\x1aW-9\xa5\xc6UK\xadR\xe3\xaa\xa5V\xa9q\xd5\x92[j\\\xb5\xd4$5\xaeZj\x92\x1aW-5I\x8d\xab\x96\x9cR\xe3\xaa\xa5V\xa9q\xd5R\xab\xd4\xb8j\xe9J\x99\x08\x82\xaf\x80\x9a$,+\x02\xba\xef\x8b\xbb`\xf9\xbc`\xfd\xbf\x9c\xf0k\x9a\xf1\\\xc6\xf7<\nh\xbb\xfa\x11\xd5\xcb\xe1\xc3\xc6\xcf_i\xb6\xf9\xcd>u|\xa1\xc6L\x7f\x03\xba\xf5\xbaRT~\x03l\x054\x07^*\x123\xbf`\xa5\x1b\x11T\xbf\xc1U\xfdp\x95iku\xa7\xd6\xfc]\xfd\xca\xd7\x83\x88\xe4\x83~};\x93qmR\xb9\xa8\xfe\xb9\xb5o\xea|\xcf6\xeb\x1f\xfa\xd2/\x9c\xf2\x0fg\xce=\x9f6\xf6X?\xffe\x1a\n\xbb\x16\xceU\xdf\xc2\xea\xbb\xb2\\]\x1b\x81\xbe9\xbe\x06\xd74f\xed\xde\xf5\xd1\x95`k5\xca\xe36\xb4([\xebhe\xa1\xc3\xa9\xad\x85c\xc7\xe8\x97\x81\xe8j\xd7\x9b*\xb3lk\x98j\xc64.US\x7f\\\xa6\x91\x02<T\xbfAV60zd%J\xed?\xe5q|\xc5\xca\xa3\xa5\xd6\xd0qh\xccgE\xb9w<2\xdf\x83\xf0l\xff\xb4\xfcJ?\xa7}fr\xbf\x130\xdclL\xf9\xb1\xdd\x19\xca/\xf9\xaf\x1eJp\r\xf5n\xc3P\x9b\xa7c\xfa\x8e\xb2\xbb]\x1b\xf1\xb7n\xc9\x1ehI\xf5\xa3\x1e\xe5\xf01\x85\xfd\xac3\x83\xd9U\x0f\xba\xca\x0c\xf5\xa6S\xe5\xfb\xdb\x1a\xdd\xe0\x0bY.\xb4\x03\x94Q6:\x18\x8dG\xe7g\xe5\xc1Ud+o5ID\xfd_\x1f\xa7\x93\x7f\x19c\x0b\x99\xab)\xed`\\=\x04a\x1dc\xf4\\\x1d\xf2f\xb4kfo\xad[\xc5\xcbS\xb6\xb8\x91\xe6j\\\x8f \x0f\x97\xb9r+\x93\xea\x9ekk\x06\xe4\xf9\x98~\xff\xe7\xaf\xdf\xff\xf1\xaf\xff\xfc\xfa\x97`=^\xcf\xc7\xb6\x9eZ\xad\xc1eU\x07\xddC\xeb\x1aG\xb4\x1f\xec\x836W\xbf\xca\x82\xf0\x83\xaa\x07\xffw\x84\x95#\xc0\xa4\xff\xfd\xdf\x7f\xfb\xfe\xd7\xbf\xe3=\xa1zj\xa7\x8f\'\xd4\x7f\xe5\xef\xfe\x0b\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x9d\xe2\xd1\xb89\x03\x00\x00\xa4\x12\x00\x00\x12\x00\x00\x00word/numbering.xml\xec\x96\xcbr\x9b0\x14\x86\xf7\x9d\xe9;0\xec\x13\x01\xb61f\xe2d\xd2\xa4\xee\xa4\x93\xe9\xa6\xe9\x03\xc8B6Lta$\xe1\xcb\xae\xcf\xd2G\xeb\x93T\x02\x84\xed\x90\xa4\x98\xd4]eclI\xe7\xfb\x0fG\xd2\xefsq\xb5\xa1\xc4Ya!3\xce\xa6\xae\x7f\xee\xb9\x0ef\x88\'\x19[N\xdd\x1f\x0f\xb3\xb3\xc8u\xa4\x82,\x81\x843<u\xb7X\xbaW\x97\x1f?\\\xaccV\xd09\x16z\xa1\xa3\x19L\xc6\xeb\x1cM\xddT\xa9<\x06@\xa2\x14S(\xcfi\x86\x04\x97|\xa1\xce\x11\xa7\x80/\x16\x19\xc2`\xcdE\x02\x02\xcf\xf7\xcao\xb9\xe0\x08K\xa997\x90\xad\xa0tk\x1c\xdat\xa3%\x02\xaeu\xb0\x01\x0e\x01J\xa1Px\xb3c\xf8GCF`\x02\xa26(\xe8\x01\xd2o\x18\xf8m\xd4\xe0hT\x08LV-\xd0\xb0\x17Hg\xd5"\x8d\xfa\x91\x9ey\xb9\xb0\x1f)h\x93\xc6\xfdH\x836)\xeaGj\x1d\'\xda>\xe0<\xc7LO.\xb8\xa0P\xe9\x9fb\t(\x14\x8fE~\xa6\xc19T\xd9<#\x99\xdaj\xa6\x17Z\x0c\xcc\xd8c\x8f\x8ctTC\xa0\x83\xe4h\xc2\x18P\x9e`2H,\x85O\xddB\xb0\xb8\x8e?k\xe2M\xeaq\x15_?\x9a\x08L\xba\xc9j\xb9\t\xc0\x1bE\xa4\xb2\xb1\xa2K\xed\xaa\xf0[\x8e\n\x8a\x99*\xab\x06\x04&\xba\x8e\x9c\xc94\xcb\x1bw\xa0}iz2\xb5\x90\xd5k\x05XQb\xd7\xads\xbf\xe3U{\xc9\xdan\xabm\xd8\x01\xbb\xa4_\xef\x1d%U\xe6\xaf\x13}\xaf\xc3n\x1aD\x13\xd1%\x85CM\x9b\t\xd5\'x\'\xdc\xab4{\xc5\xf5;\x9a\x8f\x05\x04-@\x88p\xc7?\x0b\xcb\x88j\x06@\xbb\xdbm8Y\xc7ke9\xd5\xae\x18N\xb6+\xac\xdf\xd1\x03\x9f&\xb3\x07\x90\x89J\xd2\xa3(\x81\xad+0\xb1P\xc1\x14\xca\xe6\xa0\x1b">.\xa9Q\x83\xdb\xd2\xbd\x1a\xe5\xcb\xb7]\x84/\x82\x17\xf9\x8e\x96\xbd\x8dv\xb7\xb3\xc4\xb5\xe9N\x8e`\xd5\x17j\xff\x92\xcb\xb7%\xf3=\x85\xb9vJ\x8a\xe2\xbb%\xe3\x02\xce\x89\xceH_\x0fG\x9fp\xa7\xdc\x01\xf3\xa9\x0f\x8ay\x94_\xf1\xa6\x1c7{\xed\x18\x8fq/u[\x05\xe7R\t\x88\xd4\xb7\x82:\x07\xbf\xee\xf4\xd9\xd4\xed\x99\xa6\xc5\x02\xeb\x9eL\x98\xc1\xaa\x03\xbb^(,>\t\x0c\x1f\xcd\x12Ca\xd2\xe8\xc4+\xa8\r[\xe7:\x1b\xdfF\xbe\x0b\xcc\x0c-\x88\xca\xee\xf1\n\x93\x87m\x8e\xed\x9ar\x94\x98\xd1j\x95\xa29\xb1s\x83\xd0\x8b\x867\xfe\xe7j\x86\xac\xccD\xa6\x1fV\xab\xcc\xc5.\xaeUts8\xa3\xcd\xe0\xbc \x04\xab&\xfeA\xff3\xd8\xa9\xdf?\x7f5\xe3_\x91\x1d%xQ.\x07\xe5\xf8SY\xbfz\xc5\x03\x89\x04\xa3\x8c\xc2:\xfb\'\x1aG\x0b\x04\xa7\x16\x18\x9cZ\xa0:K\'\x14\x18\x9dZ <\xb5\xc0\xf8\xd4\x02\xd1\xbf\x17\x00\x07\x8e`\x96\xbfj\x17~\x1f\xbb\x18\xdc\x0c\xa3\x917\x89\xfa\xda\x85?\x1a^\xcf&^\xf0n\x17\xefv\xd1\x08\xbc\xdb\xc5_\x05\xfe\x8b]\xb0\xd2&\xd8\x9e=\x98\x8e$N\x8a\xb2_1\x83\xa1\x17DQ\x18E\xd5\x99;0\x14+S^ZPbZ\xcc\xe09f0\xf6\xc2\xf1H7\x95/3\xbd}f\xf5\xac\xcc\xea\xf2\x0f\x00\x00\x00\xff\xff\x03\x00PK\x03\x04\x14\x00\x06\x00\x08\x00\x00\x00!\x00\xfc\xe5\xbc\xac.\x01\x00\x00K\x03\x00\x00\x14\x00\x00\x00word/webSettings.xml\x9c\xd1\xcdn\xc20\x0c\x00\xe0\xfb\xa4\xbdC\x95;\xa4\xa0\x81PE\xe12M\xday\xdb\x03\x84\xc4\xa5\x11I\\\xc5a\x85\xb7\x9f\xdb\x01\xab\xc4\x85\xee\x92\x7f\x7f\xb2\x9d\xf5\xf6\xe4]\xf6\r\x91,\x86R\xcc\xa6\xb9\xc8 h46\xecK\xf1\xf5\xf96Y\x89\x8c\x92\nF9\x0cP\x8a3\x90\xd8n\x9e\x9f\xd6m\xd1\xc2\xee\x03R\xe2\x97\x94\xb1\x12\xa8\xf0\xba\x14uJM!%\xe9\x1a\xbc\xa2)6\x10\xf8\xb2\xc2\xe8U\xe2m\xdcK\xaf\xe2\xe1\xd8L4\xfaF%\xbb\xb3\xce\xa6\xb3\x9c\xe7\xf9R\\\x98\xf8\x88\x82Ue5\xbc\xa2>z\x08\xa9\x8f\x97\x11\x1c\x8b\x18\xa8\xb6\r]\xb5\xf6\x11\xad\xc5h\x9a\x88\x1a\x88\xb8\x1e\xef~=\xafl\xb81\xb3\x97;\xc8[\x1d\x91\xb0JS.\xe6\x92QOq\xf8,\xefW\xde\xfd\x01\x8bq\xc0\xfc\x0eXj8\x8d3V\x17Cr\xe4\xd0\xb1f\x9c\xb3\xbc9\xd6\x0c\x9c\xff%3\x00\xc8$S\x8fR\xe6\xd7\xbe\xca.V%U+\xaa\x87"\x8cKjq\xe3\xce\xbe\xeb\x91\xd7\xc5\xfb>`T;\xc7\x12\xffz\xc6\x1f\x97\xf5p7r\xfd\xdd\xd4/\xe1\xd4\x9fw%\x08\xb9\xf9\x01\x00\x00\xff\xff\x03\x00PK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\tj\'\rz\x01\x00\x00\xad\x06\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00[Content_Types].xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x1e\x91\x1a\xb7\xef\x00\x00\x00N\x02\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb3\x03\x00\x00_rels/.relsPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x006H\x95h\x1d\x01\x00\x00\xbe\x04\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd3\x06\x00\x00word/_rels/document.xml.relsPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x19\xb3\xc2Ut\x0e\x00\x00.\xcd\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x002\t\x00\x00word/document.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00NX\xe8\x07\xbe\x02\x00\x00\xc7\x0b\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd5\x17\x00\x00word/endnotes.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\xd8\xe3b\xdd\xbd\x02\x00\x00\xcd\x0b\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc2\x1a\x00\x00word/footnotes.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00L\'2e\xd5\x06\x00\x00\xd0 \x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xaf\x1d\x00\x00word/theme/theme1.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x02d:\x01\xc8\x04\x00\x00O\x0e\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb7$\x00\x00word/settings.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\xeb\xff\xee\xb8\t\x02\x00\x00p\x05\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xae)\x00\x00word/fontTable.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00E\x9cg\x97E\x01\x00\x00{\x02\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe7+\x00\x00docProps/core.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00L\xec\x16\x1dw\x01\x00\x00\xca\x02\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00c.\x00\x00docProps/app.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00u\x90Np\x81\x0c\x00\x00\x8aw\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x101\x00\x00word/styles.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\x9d\xe2\xd1\xb89\x03\x00\x00\xa4\x12\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xbe=\x00\x00word/numbering.xmlPK\x01\x02-\x00\x14\x00\x06\x00\x08\x00\x00\x00!\x00\xfc\xe5\xbc\xac.\x01\x00\x00K\x03\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\'A\x00\x00word/webSettings.xmlPK\x05\x06\x00\x00\x00\x00\x0e\x00\x0e\x00\x80\x03\x00\x00\x87B\x00\x00\x00\x00'
            log_writer('I',"Get AnySupport Data (1Step)")
            mobile_data = self.any_data.toPlainText()
            # .split('\n')'
            log_writer('I',"Check AnySupport Data (1Step)")
            if self.running_seq.count("") == 2:
                for i in range(len(self.running_seq)):
                    if "" == self.running_seq[i]:
                        if i == 0:
                            QMessageBox.about(
                                self, "알림", f"예약번호가 입력되지 않았습니다.\n예약번호를 확인해주세요."
                            )
                            break
                        elif i == 1:
                            QMessageBox.about(self, "알림", f"애니서포트에서 복사된 데이터가 입력되지 않았습니다.")
                            break
            elif self.ans.count("") >= 1:
                log_writer('I',"Not Input Data From G/B")
                for i in range(len(self.ans)):
                    if "" == self.ans[i]:
                        QMessageBox.about(self, "알림", f"입력 안된 값이 있습니다!\n{i+1}번 항목을 확인해주세요.")
                        break
            else:
                # print(len(mobile_data.split('\n')))
                log_writer('I',"AnySupport Data Check Complete")
                reply = QMessageBox.question(self,"저장 안내","이대로 저장하시겠습니까?",QMessageBox.Yes | QMessageBox.Yes ,QMessageBox.No)

                if reply == QMessageBox.Yes:
                    log_writer('I',"Save Sequence Run")
                    data = mobile_data.split("\n")
                    datas = []
                    for i in data:
                        if i == " ":
                            continue
                        elif i == "":
                            continue
                        try:
                            datas.append(i.split("\t"))
                        except:
                            pass
                    try:
                        u_data = dict(datas)
                    except:
                        log_writer('I',"AnySupport Data Wrong")
                        QMessageBox.about(
                            self, "주의", "정상적인 애니서포트 데이터가 아닙니다.\n확인 후 다시 입력하여 주십시오."
                        )
                        return 1
                    # 안드로이드 버전 / 모델 번호 / 제조사 / 통신사
                    if not u_data:
                        log_writer('I',"AnySupport Data Wrong")
                        QMessageBox.about(
                            self, "주의", "정상적인 애니서포트 데이터가 아닙니다.\n확인 후 다시 입력하여 주십시오."
                        )
                        return 1
                    log_writer('I',"Report File Init (Filename = 'report_m.docx')")
                    with open("./report_m.docx", "wb") as f:
                        f.write(report_data)
                    log_writer('I',"Report File Set (Filename = 'report_m.docx')")
                    # doc = Document("./report_m.docx")
                    
                    log_writer('I',"Docx Write Start")
                    doc = Document("./report_m.docx")
                    log_writer('I',"Write Start Basic Info")
                    for i in doc.paragraphs:
                        if "Android_Version" in i.text:
                            i.text = i.text.replace("Android_Version", u_data["안드로이드 버전"])
                        if "Model_Number" in i.text:
                            i.text = i.text.replace("Model_Number", u_data["모델 번호"])
                        if "Model_Maker" in i.text:
                            i.text = i.text.replace("Model_Maker", u_data["제조사"])
                        if "Broad_Bender" in i.text:
                            i.text = i.text.replace("Broad_Bender", u_data["통신사"])
                        if "Used_Vaccine" in i.text:
                            if (self.vaccine_used.text() == '' and self.vaccine_list.currentText() == '미설치') or (self.vaccine_used.text() == '' and self.vaccine_list.currentText() == '기타...'):
                                i.text = i.text.replace("Used_Vaccine", "미설치")
                            else:
                                if type(self.hbox1.itemAt(1).widget()) == type(QComboBox()):
                                    # print(self.vaccine_list.currentText())
                                    if self.install_vaccine.isChecked():
                                        i.text = i.text.replace("Used_Vaccine", self.vaccine_list.currentText()+" (점검중 설치)")
                                    else:
                                        i.text = i.text.replace("Used_Vaccine", self.vaccine_list.currentText())
                                else:
                                    if self.install_vaccine.isChecked():
                                        i.text = i.text.replace("Used_Vaccine", self.vaccine_used.text()+" (점검중 설치)")
                                    else:
                                        i.text = i.text.replace("Used_Vaccine", self.vaccine_used.text())

                    tables = doc.tables
                    log_writer('I',"Write Start Check List Result")
                    for i in range(len(self.ans)):
                        if self.ans[i] == "양호":
                            tables[1].rows[i + 1].cells[2].paragraphs[0].text = ""
                            text = (tables[1].rows[i + 1].cells[2].paragraphs[0].add_run(self.ans[i]))
                            text.bold = True
                            text.font.color.rgb = RGBColor(0x00, 0x00, 0xFF)
                        elif self.ans[i] == "취약":
                            tables[1].rows[i + 1].cells[2].paragraphs[0].text = ""
                            text = (tables[1].rows[i + 1].cells[2].paragraphs[0].add_run(self.ans[i]))
                            text.bold = True
                            text.font.color.rgb = RGBColor(0xFF, 0x00, 0x00)

                    for i in range(len(self.af_ans)):
                        if self.af_ans[i] == "양호":
                            tables[1].rows[i + 1].cells[3].paragraphs[0].text = ""
                            text = (tables[1].rows[i + 1].cells[3].paragraphs[0].add_run(self.af_ans[i]))
                            text.bold = True
                            text.font.color.rgb = RGBColor(0x00, 0x00, 0xFF)
                        elif self.af_ans[i] == "취약":
                            tables[1].rows[i + 1].cells[3].paragraphs[0].text = ""
                            text = (tables[1].rows[i + 1].cells[3].paragraphs[0].add_run(self.af_ans[i]))
                            text.bold = True
                            text.font.color.rgb = RGBColor(0xFF, 0x00, 0x00)
                    log_writer('I',"Write End | Save Start")
                    log_writer('I',f"Save Location : {self.scripts['저장경로']}")
                    tm = time.localtime(time.time())

                    date = (str(tm.tm_year)[2:] + str(tm.tm_mon).zfill(2) + str(tm.tm_mday).zfill(2))
                    log_writer('I',"Save Type Check")
                    if not self.file_ck.isChecked():
                        if not os.path.isdir(f"{self.scripts['저장경로']}/{date}"):
                            os.mkdir(f"{self.scripts['저장경로']}/{date}")
                        else:
                            pass

                        try:
                            if not os.path.isdir(f"{self.scripts['저장경로']}/{date}/{self.seq_num.split('-')[1]}"):
                                os.mkdir(f"{self.scripts['저장경로']}/{date}/{self.seq_num.split('-')[1]}")
                            else:
                                pass
                        except:
                            pass
                        log_writer('I',"Save Complete (Folder In)")
                        doc.save(f"{self.scripts['저장경로']}/{date}/{self.seq_num.split('-')[1]}/{self.seq_num}.docx")
                    else:
                        log_writer('I',"Save Complete (Basic Loc)")
                        doc.save(f"{self.scripts['저장경로']}/{self.seq_num}.docx")

                    log_writer('I',"Removed Basic Docx File")
                    os.remove("./report_m.docx")
                    QMessageBox.about(self, "알림", "저장 완료.")
                    if self.cp_ms_ck.isChecked():
                        log_writer('I',"Copy Secu Manual URL")
                        copy("https://www.boho.or.kr/webprotect/pcSecCheck.do")
                        manual_page_ans = QMessageBox.question(self, "알림", "보안안내서 페이지 복사 됨.", QMessageBox.Yes | QMessageBox.Yes)
                        copy("https://www.boho.or.kr/webprotect/pcSecCheck.do")
                        while not manual_page_ans:
                            time.sleep(0.01)

                        log_writer('I',"Copy Servey URL")
                        copy("https://docs.google.com/forms/d/e/1FAIpQLSdfy-qViIlFArBpPMCgN6hyzuU7eSEelTNT_z72uXHzXI2Z7A/viewform?usp=sf_link")
                        request_page_ans = QMessageBox.question(self, "알림", "설문조사 페이지 복사 됨.", QMessageBox.Yes | QMessageBox.Yes)
                        copy("https://docs.google.com/forms/d/e/1FAIpQLSdfy-qViIlFArBpPMCgN6hyzuU7eSEelTNT_z72uXHzXI2Z7A/viewform?usp=sf_link")

                    while not request_page_ans:
                        time.sleep(0.01)

                    log_writer('I',"Default Status Reset")

                    for i in self.yes_button:
                        i.setEnabled(False)

                    self.vaccine_used.setEnabled(False)
                    self.vaccine_used.setText("")

                    self.install_vaccine.setEnabled(False)
                    self.vaccine_list.setEnabled(False)
                    self.vaccine_list.setCurrentIndex(0)
                    # print(self.vaccine_list.currentText())
                    # try:
                    self.hbox1.itemAt(1).widget().setParent(None)
                    self.hbox1.addWidget(self.vaccine_list)
                    self.running_seq[0] = ''
                    self.running_seq[1] = ''
                    self.stat_print()
                else:
                    pass
        except Exception as e:
            log_writer('E',"Mobile Report Save Error", e)
            ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
            sys.exit(1000)


if __name__ == "__main__":
    try:
        if not os.path.isdir("./log"):
            os.mkdir('./log')
        log_writer('I',"Main Module Load")
        app = QApplication(sys.argv)
        ex = MyApp()

        sys.exit(app.exec_())
    except Exception as e:
        log_writer('E',"Main Module Load Error", e)
        ctypes.windll.user32.MessageBoxW(0, "프로그램 에러가 발생하였습니다.\n폴더내 생성된 압축파일을 개발자한테 전달 부탁드립니다.", "오류", 16)
        sys.exit(1000)